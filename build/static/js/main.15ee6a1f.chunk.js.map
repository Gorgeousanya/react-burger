{"version":3,"sources":["components/profile-nav/profile-nav.module.css","components/app-header/app-header.module.css","services/hooks.ts","services/utils.ts","utils/api.ts","services/actions/burger.ts","services/actions/auth.ts","components/burger-ingredients/burger-ingredient.tsx","components/modal/modal-overlay.tsx","components/modal/modal.tsx","images/done.svg","components/order-details/order-details.tsx","components/burger-constructor/burger-constructor.tsx","pages/home.tsx","pages/login.tsx","components/profile-nav/profile-nav.tsx","pages/profile.tsx","services/actions/feed.ts","components/order-item/order-item.tsx","pages/profile-orders.tsx","pages/register.tsx","pages/forgot-password.tsx","pages/reset-password.tsx","pages/ingredients-details.tsx","services/middleware/socketMiddleware.ts","pages/order.tsx","components/orders-stats/orders-stats.tsx","pages/feed.tsx","components/protected-routes.tsx","components/app-header/app-header.tsx","components/app/App.tsx","reportWebVitals.ts","services/reducers/burger.ts","services/reducers/auth.ts","services/reducers/feed.ts","services/reducers/index.ts","services/store.ts","index.tsx","components/burger-ingredients/burger-ingredients.module.css","pages/pages.module.css","components/order-item/order-item.module.css","components/orders-stats/orders-stats.module.css","components/burger-constructor/burger-constructor.module.css","components/modal/modal.module.css","components/order-details/order.module.css"],"names":["module","exports","useDispatch","dispatchHook","useSelector","selectorHook","setCookie","name","value","props","exp","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","document","cookie","getCookie","matches","match","RegExp","replace","decodeURIComponent","undefined","checkResponse","res","ok","json","Promise","reject","status","formatStatus","baseUrl","SET_TAB","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_ERROR","OPEN_MODAL","OPEN_MODAL_ORDER","CLOSE_MODAL","CLOSE_MODAL_ORDER","GET_ORDER_REQUEST","GET_ORDER_SUCCESS","GET_ORDER_ERROR","RESET_ORDER","ADD_INGREDIENT","DELETE_INGREDIENT","CHANGE_SORT","getOrderID","data","dispatch","type","fetch","method","mode","body","JSON","stringify","headers","then","obj","getOrderSuccessAction","error","console","log","getIngredientsData","deleteIngredient","id","closeModal","setTab","e","tab","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_ERROR","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_ERROR","UPDATE_TOKEN_REQUEST","UPDATE_TOKEN_SUCCESS","UPDATE_TOKEN_ERROR","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_ERROR","USER_REQUEST","USER_SUCCESS","USER_ERROR","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_ERROR","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_ERROR","RESET_PASSWORD_REQUEST","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_ERROR","registerErrorAction","loginErrorAction","logoutErrorAction","register","email","password","user","success","accessToken","localStorage","setItem","refreshToken","catch","err","login","updateToken","token","getItem","logout","removeItem","getUser","Authorization","updateUser","forgotPassword","resetPassword","bun","sauce","main","Card","item","onClick","useDrag","dragRef","location","useLocation","constructor","store","burger","count","filter","ingredient","_id","length","Fragment","className","ingredientStyles","link","to","pathname","state","background","card","ref","counter","size","src","image_large","img","alt","map","price","BurgerIngredients","current","items","ingredients","clickTab","getElementById","scrollIntoView","behavior","block","clickItem","el","openModal","active","onScroll","pos","scrollTop","resdy","dy","forEach","offsetTopItem","offsetTop","Math","abs","ModalOverlay","children","styles","modaloverlay","modalRoot","Modal","onClose","isOpen","useEffect","handleEscape","code","addEventListener","removeEventListener","ReactDOM","createPortal","modal","header","button","OrderDetails","order","component","number","done","Constructor","index","React","useRef","useDrop","accept","hover","dragIndex","hoverIndex","drag","changeSortIngredient","dropTarget","constructorStyles","element","text","thumbnail","image","handleClose","uuid","BurgerConstructor","find","other","open","modalOrder","history","useHistory","loggedIn","auth","total","useMemo","reduce","sum","drop","uuidv4","collect","monitor","isDrop","isOver","classNameContainer","container","isLocked","i","cost","setTimeout","push","disabled","HomePage","appStyles","App","page_content","DndProvider","backend","HTML5Backend","LoginPage","inputRef","useState","form","setValue","onChange","target","from","inputs","input","onSubmit","preventDefault","placeholder","errorText","save","ProfileNav","buttons","ProfilePage","setForm","isSame","setSame","icon","WS_CONNECTION_START","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_ORDERS","OPEN_WS_MODAL","CLOSE_WS_MODAL","wsConnectionStartAction","withToken","payload","wsConnectionClosedAction","wsOpenModal","wsCloseModal","wsActions","wsInit","onOpen","onError","onGetOrders","OrderItem","createdAt","ingredientsId","orderIngredients","includes","reverse","orderIngredientsShow","slice","orderIngredientsHidden","totalPrice","formatRelative","locale","ru","list","images","ProfileOrders","feed","orders","setOrders","RegisterPage","ForgotPasswordPage","prevPathname","ResetPasswordPage","resetPasswordError","alert","wsUrl","IngredientDetails","useParams","calories","proteins","fat","carbohydrates","OrderPage","split","cur","content","image_mobile","row","OrdersStats","pending","column","doneNumber","totalToday","FeedPage","ProtectedRoute","rest","render","AppHeader","home","useRouteMatch","profile","headerStyles","exact","activeClassName","button_active","isExact","button_text","logo","modalItem","modalWs","wsModal","goBack","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","burgerInitialState","ingredientsLoading","ingredientsError","orderLoading","orderError","authInitialState","registerRequest","registerError","loginRequest","loginError","updateTokenRequest","updateTokenError","logoutRequest","logoutError","userRequest","userError","updateUserRequest","updateUserError","forgotPasswordRequest","forgotPasswordError","resetPasswordRequest","feedInitialState","wsConnected","rootReducer","combineReducers","action","splice","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","socket","next","accessCookie","WebSocket","send","event","onerror","onmessage","parsed","parse","onclose","createStore","StrictMode"],"mappings":"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","file":"static/js/main.15ee6a1f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"profile-nav_buttons__DjWxq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app-header_header__1iHLW\",\"content\":\"app-header_content__KCd-V\",\"logo\":\"app-header_logo__zVEfY\",\"button\":\"app-header_button__1tHq1\",\"button_text\":\"app-header_button_text__QpOdy\",\"button_active\":\"app-header_button_active__N4rAI\"};","import {\n    TypedUseSelectorHook,\n    useDispatch as dispatchHook,\n    useSelector as selectorHook\n  } from 'react-redux';\n  import { AppDispatch, RootState, AppThunk } from './utils';\n  \n  export const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();\n  export const useSelector: TypedUseSelectorHook<RootState> = selectorHook;","import { Action, ActionCreator, Dispatch } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport { store } from './store';\nimport { TAuthActions } from './actions/auth';\nimport { TBurgerActions } from './actions/burger'\nimport { TFeedActions } from './actions/feed';\n\ntype TApplicationActions = TAuthActions | TBurgerActions | TFeedActions;\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = Dispatch<TApplicationActions>;\nexport type AppThunk<ReturnType = void> = ActionCreator<\n  ThunkAction<ReturnType, Action, RootState, TApplicationActions>\n>;\n\nexport function setCookie(name: string, value: string, props?: any) {\n  props = props || {};\n  let exp = props.expires;\n  if (typeof exp == 'number' && exp) {\n      const d = new Date();\n      d.setTime(d.getTime() + exp * 1000);\n      exp = props.expires = d;\n  }\n  if (exp && exp.toUTCString) {\n      props.expires = exp.toUTCString();\n  }\n  value = encodeURIComponent(value);\n  let updatedCookie = name + '=' + value;\n  for (const propName in props) {\n      updatedCookie += '; ' + propName;\n      const propValue = props[propName];\n      if (propValue !== true) {\n          updatedCookie += '=' + propValue;\n      }\n  }\n  document.cookie = updatedCookie;\n}\n\nexport function getCookie(name: string) {\n  const matches = document.cookie.match(\n      new RegExp('(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)') //eslint-disable-line\n  );\n  return matches ? decodeURIComponent(matches[1]) : undefined;\n}\n\nexport function deleteCookie(name: string) {\n  setCookie(name, \"\", { expires: -1 });\n}\n\nexport function checkResponse(res: Response) {\n  if (res.ok) {\n      return res.json();\n  } else {\n      return Promise.reject(`Ошибка ${res.status}`);\n  }\n}\n\nexport const formatStatus = (status: string): string => {\n  if (status === \"done\") {\n    return \"Выполнен\";\n  } else if (status === \"pending\") {\n    return \"Готовится\";\n  } else {\n    return \"Создан\";\n  }\n};","export const baseUrl = \"https://norma.nomoreparties.space/api/\";\nexport const WS_API_URL = \"wss://norma.nomoreparties.space/orders\";","import {\n    checkResponse,\n    AppDispatch,\n    AppThunk,\n    getCookie,\n} from '../utils';\nimport {\n    baseUrl\n} from '../../utils/api';\nimport {\n    TIngredient,\n    IOrderState\n} from '../../utils/types'\n\nexport const SET_TAB: 'SET_TAB' = 'SET_TAB';\nexport const GET_INGREDIENTS: 'GET_INGREDIENTS' = 'GET_INGREDIENTS';\nexport const GET_INGREDIENTS_REQUEST: 'GET_INGREDIENTS_REQUEST' = 'GET_INGREDIENTS_REQUEST';\nexport const GET_INGREDIENTS_SUCCESS: 'GET_INGREDIENTS_SUCCESS' = 'GET_INGREDIENTS_SUCCESS';\nexport const GET_INGREDIENTS_ERROR: 'GET_INGREDIENTS_ERROR' = 'GET_INGREDIENTS_ERROR';\nexport const GET_CONSTRUCTOR: 'GET_CONSTRUCTOR' = 'GET_CONSTRUCTOR';\nexport const OPEN_MODAL: 'OPEN_MODAL' = 'OPEN_MODAL';\nexport const OPEN_MODAL_ORDER: 'OPEN_MODAL_ORDER' = 'OPEN_MODAL_ORDER';\nexport const CLOSE_MODAL: 'CLOSE_MODAL' = 'CLOSE_MODAL';\nexport const CLOSE_MODAL_ORDER: 'CLOSE_MODAL_ORDER' = 'CLOSE_MODAL_ORDER';\nexport const GET_ORDER: 'GET_ORDER' = 'GET_ORDER';\nexport const GET_ORDER_REQUEST: 'GET_ORDER_REQUEST' = 'GET_ORDER_REQUEST';\nexport const GET_ORDER_SUCCESS: 'GET_ORDER_SUCCESS' = 'GET_ORDER_SUCCESS';\nexport const GET_ORDER_ERROR: 'GET_ORDER_ERROR' = 'GET_ORDER_ERROR';\nexport const RESET_ORDER: 'RESET_ORDER' = 'RESET_ORDER';\nexport const ADD_INGREDIENT: 'ADD_INGREDIENT' = 'ADD_INGREDIENT';\nexport const DELETE_INGREDIENT: 'DELETE_INGREDIENT' = 'DELETE_INGREDIENT';\nexport const CHANGE_SORT: 'CHANGE_SORT' = 'CHANGE_SORT';\n\nexport interface IGetOrderRequestAction {\n    readonly type: typeof GET_ORDER_REQUEST;\n}\n\nexport interface IGetOrderSuccessAction {\n    readonly type: typeof GET_ORDER_SUCCESS;\n    readonly data: IOrderState;\n}\n\nexport interface IGetOrderErrorAction {\n    readonly type: typeof GET_ORDER_ERROR;\n}\n\nexport interface IGetIngredientsRequestAction {\n    readonly type: typeof GET_INGREDIENTS_REQUEST;\n}\n\nexport interface IGetIngredientsSuccessAction {\n    readonly type: typeof GET_INGREDIENTS_SUCCESS;\n    readonly data: Array<TIngredient>;\n}\n\nexport interface IGetIngredientsErrorAction {\n    readonly type: typeof GET_INGREDIENTS_ERROR;\n}\n\nexport interface IAddIngredientAction {\n    readonly type: typeof ADD_INGREDIENT;\n    readonly item: TIngredient;\n}\n\nexport interface IDeleteIngredientAction {\n    readonly type: typeof DELETE_INGREDIENT;\n    readonly id: string;\n}\n\nexport interface ISetTab {\n    readonly type: typeof SET_TAB;\n    readonly tab: string\n}\n\nexport interface IChangeSortAction {\n    readonly type: typeof CHANGE_SORT;\n    readonly drag: number;\n    readonly hover: number;\n}\n\nexport interface IOpenModalAction {\n    readonly type: typeof OPEN_MODAL;\n    readonly item: TIngredient;\n}\n\nexport interface ICloseModalAction {\n    readonly type: typeof CLOSE_MODAL;\n}\n\nexport interface IOpenModalOrderAction {\n    readonly type: typeof OPEN_MODAL_ORDER;\n}\n\nexport interface ICloseModalOrderAction {\n    readonly type: typeof CLOSE_MODAL_ORDER;\n}\n\nexport interface IResetOrderlAction {\n    readonly type: typeof RESET_ORDER;\n}\n\nconst getOrderRequestAction = (): IGetOrderRequestAction => ({\n    type: GET_ORDER_REQUEST\n})\nconst getOrderSuccessAction = (data: any): IGetOrderSuccessAction => ({\n                        type: GET_ORDER_SUCCESS,\n                        data\n                    })\n\nconst getOrderErrorAction = (): IGetOrderRequestAction => ({\n    type: GET_ORDER_REQUEST\n})\n\nconst getIngredientsRequestAction = (): IGetIngredientsRequestAction => ({\n    type: GET_INGREDIENTS_REQUEST\n})\nconst getIngredientsSuccessAction = (data: any): IGetIngredientsSuccessAction => ({\n                        type: GET_INGREDIENTS_SUCCESS,\n                        data\n                    })\nconst getIngredientsErrorAction = (): IGetIngredientsRequestAction => ({\n    type: GET_INGREDIENTS_REQUEST\n})\n\nexport const getOrderID: AppThunk = (data: TIngredient) => {\n\n    return (dispatch: AppDispatch) => {\n        try {\n            dispatch(getOrderRequestAction());\n\n            fetch(baseUrl + \"orders\", {\n                method: 'POST',\n                mode: 'cors',\n                body: JSON.stringify({\n                    \"ingredients\": data\n                }),\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `${getCookie('token')}`\n                }\n            })\n                .then(checkResponse)\n                .then(obj => {\n                    dispatch(getOrderSuccessAction(obj));\n                });\n        } catch (error) {\n            console.log(error)\n            dispatch(getOrderErrorAction());\n        }\n    }\n};\n\nexport const getIngredientsData: AppThunk = () => {\n    return (dispatch: AppDispatch) => {\n        try {\n            dispatch(getIngredientsRequestAction());\n\n            fetch(baseUrl + \"ingredients\")\n                .then(checkResponse)\n                .then(obj => {\n                    dispatch(getIngredientsSuccessAction(obj.data));\n                });\n        } catch (error) {\n            console.log(error)\n            dispatch(getIngredientsErrorAction());\n        }\n    }\n};\n\nexport const addIngredient = (item: TIngredient): IAddIngredientAction => {\n    return {\n        type: ADD_INGREDIENT,\n        item\n    }\n}\n\nexport const deleteIngredient = (id: string): IDeleteIngredientAction => {\n    return {\n        type: DELETE_INGREDIENT,\n        id\n    }\n}\n\nexport const changeSortIngredient = (drag: number, hover: number): IChangeSortAction => {\n    return {\n        type: CHANGE_SORT,\n        drag,\n        hover\n    }\n}\n\nexport const openModal = (el: TIngredient): IOpenModalAction => {\n    return {\n        type: OPEN_MODAL,\n        item: el\n    }\n}\n\nexport const closeModal = (): ICloseModalAction => {\n    return {\n        type: CLOSE_MODAL,\n    }\n}\n\nexport const setTab = (e: string): ISetTab => {\n    return {\n        type: SET_TAB,\n        tab: e\n    }\n}\n\nexport const openModalOrder = (): IOpenModalOrderAction => {\n    return {\n        type: OPEN_MODAL_ORDER\n    }\n}\n\nexport const closeModalOrder = (): ICloseModalOrderAction => {\n    return {\n        type: CLOSE_MODAL_ORDER,\n    }\n}\n\nexport const resetOrder = (): IResetOrderlAction => {\n    return {\n        type: RESET_ORDER,\n    }\n}\n\nexport type TBurgerActions = | IGetOrderRequestAction\n    | IGetOrderSuccessAction\n    | IGetOrderErrorAction\n    | IGetIngredientsRequestAction\n    | IGetIngredientsSuccessAction\n    | IGetIngredientsErrorAction\n    | IAddIngredientAction\n    | IDeleteIngredientAction\n    | ISetTab\n    | IChangeSortAction\n    | IOpenModalAction\n    | ICloseModalAction\n    | IOpenModalOrderAction\n    | ICloseModalOrderAction\n    | IResetOrderlAction;","import {\n    setCookie,\n    deleteCookie,\n    getCookie,\n    checkResponse,\n    AppDispatch, \n    AppThunk\n} from '../utils';\nimport {\n    baseUrl\n} from '../../utils/api';\n\nexport const REGISTER_REQUEST: \"REGISTER_REQUEST\" = \"REGISTER_REQUEST\";\nexport const REGISTER_SUCCESS: \"REGISTER_SUCCESS\" = \"REGISTER_SUCCESS\";\nexport const REGISTER_ERROR: \"REGISTER_ERROR\" = \"REGISTER_ERROR\";\nexport const LOGIN_REQUEST: \"LOGIN_REQUEST\" = \"LOGIN_REQUEST\";\nexport const LOGIN_SUCCESS: \"LOGIN_SUCCESS\" = \"LOGIN_SUCCESS\";\nexport const LOGIN_ERROR: \"LOGIN_ERROR\" = \"LOGIN_ERROR\";\nexport const UPDATE_TOKEN_REQUEST: \"UPDATE_TOKEN_REQUEST\" = \"UPDATE_TOKEN_REQUEST\";\nexport const UPDATE_TOKEN_SUCCESS: \"UPDATE_TOKEN_SUCCESS\" = \"UPDATE_TOKEN_SUCCESS\";\nexport const UPDATE_TOKEN_ERROR: \"UPDATE_TOKEN_ERROR\" = \"UPDATE_TOKEN_ERROR\";\nexport const LOGOUT_REQUEST: \"LOGOUT_REQUEST\" = \"LOGOUT_REQUEST\";\nexport const LOGOUT_SUCCESS: \"LOGOUT_SUCCESS\" = \"LOGOUT_SUCCESS\";\nexport const LOGOUT_ERROR: \"LOGOUT_ERROR\" = \"LOGOUT_ERROR\";\nexport const USER_REQUEST: \"USER_REQUEST\" = \"USER_REQUEST\";\nexport const USER_SUCCESS: \"USER_SUCCESS\" = \"USER_SUCCESS\";\nexport const USER_ERROR: \"USER_ERROR\" = \"USER_ERROR\";\nexport const UPDATE_USER_REQUEST: \"UPDATE_USER_REQUEST\" = \"UPDATE_USER_REQUEST\";\nexport const UPDATE_USER_SUCCESS: \"UPDATE_USER_SUCCESS\" = \"UPDATE_USER_SUCCESS\";\nexport const UPDATE_USER_ERROR: \"UPDATE_USER_ERROR\" = \"UPDATE_USER_ERROR\";\nexport const FORGOT_PASSWORD_REQUEST: \"FORGOT_PASSWORD_REQUEST\" = \"FORGOT_PASSWORD_REQUEST\";\nexport const FORGOT_PASSWORD_SUCCESS: \"FORGOT_PASSWORD_SUCCESS\" = \"FORGOT_PASSWORD_SUCCESS\";\nexport const FORGOT_PASSWORD_ERROR: \"FORGOT_PASSWORD_ERROR\" = \"FORGOT_PASSWORD_ERROR\";\nexport const RESET_PASSWORD_REQUEST: \"RESET_PASSWORD_REQUEST\" = \"RESET_PASSWORD_REQUEST\";\nexport const RESET_PASSWORD_SUCCESS: \"RESET_PASSWORD_SUCCESS\" = \"RESET_PASSWORD_SUCCESS\";\nexport const RESET_PASSWORD_ERROR: \"RESET_PASSWORD_ERROR\" = \"RESET_PASSWORD_ERROR\";\n\nexport interface IRegisterRequestAction {\n    readonly type: typeof REGISTER_REQUEST;\n}\n\nexport interface IRegisterSuccessAction {\n    readonly type: typeof REGISTER_SUCCESS;\n    readonly user: {\n        name: string;\n        email: string;\n    };\n}\n\nexport interface IRegisterErrorAction {\n    readonly type: typeof REGISTER_ERROR;\n}\n\nexport interface ILoginRequestAction {\n    readonly type: typeof LOGIN_REQUEST;\n}\n\nexport interface ILoginSuccessAction {\n    readonly type: typeof LOGIN_SUCCESS;\n    readonly user: {\n        name: string;\n        email: string;\n    };\n}\n\nexport interface ILoginErrorAction {\n    readonly type: typeof LOGIN_ERROR;\n}\n\nexport interface IUpdateTokenRequestAction {\n    readonly type: typeof UPDATE_TOKEN_REQUEST;\n}\n\nexport interface IUpdateTokenSuccessAction {\n    readonly type: typeof UPDATE_TOKEN_SUCCESS;\n}\n\nexport interface IUpdateTokenErrorAction {\n    readonly type: typeof UPDATE_TOKEN_ERROR;\n}\n\nexport interface ILogoutRequestAction {\n    readonly type: typeof LOGOUT_REQUEST;\n}\n\nexport interface ILogoutSuccessAction {\n    readonly type: typeof LOGOUT_SUCCESS;\n}\n\nexport interface ILogoutErrorAction {\n    readonly type: typeof LOGOUT_ERROR;\n}\n\nexport interface IUserRequestAction {\n    readonly type: typeof USER_REQUEST;\n}\n\nexport interface IUserSuccessAction {\n    readonly type: typeof USER_SUCCESS;\n    readonly user: {\n        name: string;\n        email: string;\n    };\n}\n\nexport interface IUserErrorAction {\n    readonly type: typeof USER_ERROR;\n}\n\nexport interface IUpdateUserRequestAction {\n    readonly type: typeof UPDATE_USER_REQUEST;\n}\n\nexport interface IUpdateUserSuccessAction {\n    readonly type: typeof UPDATE_USER_SUCCESS;\n    readonly user: {\n        name: string;\n        email: string;\n    };\n}\n\nexport interface IUpdateUserErrorAction {\n    readonly type: typeof UPDATE_USER_ERROR;\n}\n\nexport interface IForgotPasswordRequestAction {\n    readonly type: typeof FORGOT_PASSWORD_REQUEST;\n}\n\nexport interface IForgotPasswordSuccessAction {\n    readonly type: typeof FORGOT_PASSWORD_SUCCESS;\n}\n\nexport interface IForgotPasswordErrorAction {\n    readonly type: typeof FORGOT_PASSWORD_ERROR;\n}\n\nexport interface IResetPasswordRequestAction {\n    readonly type: typeof RESET_PASSWORD_REQUEST;\n}\n\nexport interface IResetPasswordSuccessAction {\n    readonly type: typeof RESET_PASSWORD_SUCCESS;\n}\n\nexport interface IResetPasswordErrorAction {\n    readonly type: typeof RESET_PASSWORD_ERROR;\n}\n\nconst registerRequestAction = (): IRegisterRequestAction => ({ type: REGISTER_REQUEST });\nconst registerSuccessAction = (user: {\n    name: string;\n    email: string;\n}): IRegisterSuccessAction => ({ type: REGISTER_SUCCESS, user });\nconst registerErrorAction = (): IRegisterErrorAction => ({ type: REGISTER_ERROR });\nconst loginRequestAction = (): ILoginRequestAction => ({ type: LOGIN_REQUEST });\nconst loginSuccessAction = (user: {\n    name: string;\n    email: string;\n}): ILoginSuccessAction => ({ type: LOGIN_SUCCESS, user });\nconst loginErrorAction = (): ILoginErrorAction => ({ type: LOGIN_ERROR });\nconst updateTokenRequestAction = (): IUpdateTokenRequestAction => ({ type: UPDATE_TOKEN_REQUEST });\nconst updateTokenSuccessAction = (): IUpdateTokenSuccessAction => ({ type: UPDATE_TOKEN_SUCCESS });\nconst updateTokenErrorAction = (): IUpdateTokenErrorAction => ({ type: UPDATE_TOKEN_ERROR });\nconst logoutRequestAction = (): ILogoutRequestAction => ({ type: LOGOUT_REQUEST });\nconst logoutSuccessAction = (): ILogoutSuccessAction => ({ type: LOGOUT_SUCCESS });\nconst logoutErrorAction = (): ILogoutErrorAction => ({ type: LOGOUT_ERROR });\nconst userRequestAction = (): IUserRequestAction => ({ type: USER_REQUEST });\nconst userSuccessAction = (user: {\n    name: string;\n    email: string;\n}): IUserSuccessAction => ({ type: USER_SUCCESS, user });\nconst userErrorAction = (): IUserErrorAction => ({ type: USER_ERROR });\nconst updateUserRequestAction = (): IUpdateUserRequestAction => ({ type: UPDATE_USER_REQUEST });\nconst updateUserSuccessAction = (user: {\n    name: string;\n    email: string;\n}): IUpdateUserSuccessAction => ({ type: UPDATE_USER_SUCCESS, user });\nconst updateUserErrorAction = (): IUpdateUserErrorAction => ({ type: UPDATE_USER_ERROR });\nconst forgotPasswordRequestAction = (): IForgotPasswordRequestAction => ({ type: FORGOT_PASSWORD_REQUEST });\nconst forgotPasswordSuccessAction = (): IForgotPasswordSuccessAction => ({ type: FORGOT_PASSWORD_SUCCESS });\nconst forgotPasswordErrorAction = (): IForgotPasswordErrorAction => ({ type: FORGOT_PASSWORD_ERROR });\nconst resetPasswordRequestAction = (): IResetPasswordRequestAction => ({ type: RESET_PASSWORD_REQUEST });\nconst resetPasswordSuccessAction = (): IResetPasswordSuccessAction => ({ type: RESET_PASSWORD_SUCCESS });\nconst resetPasswordErrorAction = (): IResetPasswordErrorAction => ({ type: RESET_PASSWORD_ERROR });\n\nexport const register: AppThunk = (email: string, password: string, name: string) => {\n    return function (dispatch: AppDispatch) {\n        dispatch(registerRequestAction());\n        fetch(baseUrl + \"auth/register\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    email,\n                    password,\n                    name\n                }),\n            })\n            .then(checkResponse)\n            .then((res) => {\n                if (res.success) {\n                    setCookie('token', res.accessToken);\n                    localStorage.setItem('refreshToken', res.refreshToken);\n                    dispatch(registerSuccessAction(res.user));\n                }\n                else dispatch(registerErrorAction())\n            })\n            .catch((err) => {\n                console.log(err);\n                dispatch(registerErrorAction())\n            });\n    }\n}\n\nexport const login: AppThunk = (email: string, password: string) => {\n    return function (dispatch: AppDispatch) {\n        dispatch(loginRequestAction());\n        fetch(baseUrl + \"auth/login\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    \"email\": email,\n                    \"password\": password\n                }),\n            })\n            .then(checkResponse)\n            .then(data => {\n                if (data.success) {\n                    setCookie('token', data.accessToken);\n                    localStorage.setItem('refreshToken', data.refreshToken);\n                    dispatch(loginSuccessAction(data.user));\n                } else {\n                dispatch(loginErrorAction())}\n            })\n            .catch((err) => {\n                console.log(err);\n                dispatch(loginErrorAction())\n            });\n    }\n}\n\nexport const updateToken: AppThunk = () => {\n    return function (dispatch: AppDispatch) {\n        dispatch(updateTokenRequestAction());\n        fetch(baseUrl + \"auth/token\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    token: localStorage.getItem('refreshToken')\n                }),\n            })\n            .then(checkResponse)\n            .then((res) => {\n                if (res.success) {\n                    setCookie('token', res.accessToken);\n                    localStorage.setItem('refreshToken', res.refreshToken);\n                    dispatch(updateTokenSuccessAction());\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                dispatch(updateTokenErrorAction())\n            });\n    }\n}\n\nexport const logout: AppThunk = () => {\n    return function (dispatch: AppDispatch) {\n        dispatch(logoutRequestAction());\n        fetch(baseUrl + \"auth/logout\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    token: localStorage.getItem('refreshToken')\n                }),\n            })\n            .then(checkResponse)\n            .then((data) => {\n                if (data.success) {\n                    localStorage.removeItem('refreshToken');\n                    deleteCookie('token');\n                    dispatch(logoutSuccessAction());\n                }\n                else {\n                    dispatch(logoutErrorAction())\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                dispatch(logoutErrorAction())\n            });\n    }\n}\n\nexport const getUser: AppThunk = () => {\n    return function (dispatch) {\n        dispatch(userRequestAction());\n        fetch(baseUrl + \"auth/user\", {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `${getCookie('token')}`,\n                },\n            })\n            .then(checkResponse)\n            .then((data) => {\n                if (data.success) {\n                    dispatch(userSuccessAction(data.user));\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                // if (localStorage.getItem('refreshToken')) {\n                //     dispatch(updateToken());\n                //     dispatch(getUser());\n                // } else {\n                    dispatch(userErrorAction())\n                // }\n            });\n    }\n}\n\nexport const updateUser: AppThunk = (email: string, name: string) => {\n    return function (dispatch) {\n        dispatch(updateUserRequestAction());\n        fetch(baseUrl + \"auth/user\", {\n                method: \"PATCH\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `${getCookie('token')}`,\n                },\n                body: JSON.stringify({\n                    email,\n                    name\n                }),\n            })\n            .then(checkResponse)\n            .then((data) => {\n                console.log(data)\n                if (data.success) {\n                    dispatch(updateUserSuccessAction(data.user));\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                if (localStorage.getItem('refreshToken')) {\n                    dispatch(updateToken());\n                    dispatch(updateUser(email, name));\n                } else {\n                    dispatch(updateUserErrorAction())\n                }\n            });\n    }\n}\n\nexport const forgotPassword: AppThunk = (email: string) => {\n    return function (dispatch: AppDispatch) {\n        dispatch(forgotPasswordRequestAction());\n        fetch(baseUrl + \"password-reset\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    email\n                }),\n            })\n            .then(checkResponse)\n            .then((res) => {\n                if (res.success) {\n                    dispatch(forgotPasswordSuccessAction());\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                dispatch(forgotPasswordErrorAction())\n            });\n    }\n}\n\nexport const resetPassword: AppThunk = (password: string, token: string) => {\n    return function (dispatch: AppDispatch) {\n        dispatch(resetPasswordRequestAction());\n        fetch(baseUrl + \"password-reset/reset\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    password,\n                    token\n                }),\n            })\n            .then(checkResponse)\n            .then((data) => {\n                if (data.success) {\n                    dispatch(resetPasswordSuccessAction());\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                dispatch(resetPasswordErrorAction())\n            });\n    }\n}\n\nexport type TAuthActions = \n    | IRegisterRequestAction\n    | IRegisterSuccessAction\n    | IRegisterErrorAction\n    | ILoginRequestAction\n    | ILoginSuccessAction\n    | ILoginErrorAction\n    | IUpdateTokenRequestAction\n    | IUpdateTokenSuccessAction\n    | IUpdateTokenErrorAction\n    | ILogoutRequestAction\n    | ILogoutSuccessAction\n    | ILogoutErrorAction\n    | IUserRequestAction\n    | IUserSuccessAction\n    | IUserErrorAction\n    | IUpdateUserRequestAction\n    | IUpdateUserSuccessAction\n    | IUpdateUserErrorAction\n    | IForgotPasswordRequestAction\n    | IForgotPasswordSuccessAction\n    | IForgotPasswordErrorAction\n    | IResetPasswordRequestAction\n    | IResetPasswordSuccessAction\n    | IResetPasswordErrorAction;","import React from 'react';\nimport ingredientStyles from './burger-ingredients.module.css';\nimport { Tab, CurrencyIcon, Counter } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { TIngredient } from '../../utils/types';\nimport { useDispatch, useSelector } from '../../services/hooks';\nimport { openModal, setTab } from '../../services/actions/burger';\nimport { useDrag } from \"react-dnd\";\nimport { useLocation, Link } from 'react-router-dom';\n\nconst bun = \"Булки\";\nconst sauce = \"Соусы\";\nconst main = \"Начинки\";\n\ntype TCard = {\n  item: TIngredient,\n  onClick: () => void,\n}\n\nconst Card: React.FC<TCard> = ({ item, onClick }) => {\n  const [, dragRef] = useDrag({\n    type: \"ingredients\",\n    item: item\n  });\n\n  const location = useLocation();\n  const constructor = useSelector((store) => store.burger.constructor);\n  const count = constructor?.filter((ingredient) => ingredient._id === item._id).length;\n\n  return (\n    <React.Fragment>\n      <Link\n        className={ingredientStyles.link}\n        key={item._id}\n        to={{\n          pathname: `/ingredients/${item._id}`,\n          state: { background: location },\n        }}>\n        <div className={ingredientStyles.card} onClick={onClick} ref={dragRef}>\n          {\n            count !== 0 && count &&\n            <div className={ingredientStyles.counter}>\n              <Counter count={count} size=\"default\" />\n            </div>\n          }\n          <img src={item.image_large} className={ingredientStyles.img} alt={item.name} />\n          <div className={ingredientStyles.map}>\n            <p className=\"text text_type_digits-default\"  >\n              {item.price}\n              <CurrencyIcon type=\"primary\" />\n            </p>\n          </div>\n          <p className=\"text text_type_main-default\" >{item.name}</p>\n        </div>\n      </Link>\n    </React.Fragment>\n  )\n}\n\nconst BurgerIngredients = () => {\n  const dispatch = useDispatch();\n  const current = useSelector((store) => store.burger.tab);\n  const items = useSelector((store) => store.burger.ingredients);\n\n  function clickTab(e: string) {\n    console.log(e)\n    dispatch(setTab(e));\n    document.getElementById(e + \"-list\")?.scrollIntoView({\n      behavior: 'smooth',\n      block: 'start'\n    });\n  }\n\n  function scrollIngredientsList() {\n    const arr = [\"one\", \"two\", \"three\"];\n    let pos = document.getElementById(\"ingredients-list\")?.scrollTop || 0;\n    let res = \"\";\n    let resdy = 1000000;\n    let dy = 0;\n    arr.forEach(item => {\n      let offsetTopItem = document.getElementById(item + \"-list\")?.offsetTop || 0;\n      let offsetTop = document.getElementById(\"ingredients-list\")?.offsetTop || 0;\n      dy = Math.abs(offsetTopItem - offsetTop - pos);\n      if (dy < resdy) { res = item; resdy = dy }\n    });\n    if (res !== current)\n      dispatch(setTab(res));\n  }\n\n  const clickItem = (el: TIngredient) => {\n    dispatch(openModal(el));\n  }\n\n  return (\n    <div className={ingredientStyles.ingredient}>\n      <p className=\"text text_type_main-large mt-10 mb-5\">\n        Соберите бургер\n      </p>\n      <div className={ingredientStyles.tab}>\n        <Tab value=\"one\" active={current === 'one'} onClick={clickTab}>\n          {bun}\n        </Tab>\n        <Tab value=\"two\" active={current === 'two'} onClick={clickTab}>\n          {sauce}\n        </Tab>\n        <Tab value=\"three\" active={current === 'three'} onClick={clickTab}>\n          {main}\n        </Tab>\n      </div>\n      <div className={ingredientStyles.main} id=\"ingredients-list\" onScroll={scrollIngredientsList}>\n        <div >\n          <p className=\"text text_type_main-medium\" id=\"one-list\">\n            {bun}\n          </p>\n          <div className={ingredientStyles.map} >\n            {items?.map((item) =>\n              item.type === \"bun\" &&\n              <Card key={item._id} item={item} onClick={() => { clickItem(item) }} />)\n            }\n          </div>\n          <p className=\"text text_type_main-medium\" id=\"two-list\">\n            {sauce}\n          </p>\n          <div className={ingredientStyles.map}>\n            {items?.map((item) =>\n              item.type === \"sauce\" &&\n              <Card key={item._id} item={item} onClick={() => { clickItem(item) }} />)\n            }\n          </div>\n          <p className=\"text text_type_main-medium\" id=\"three-list\">\n            {main}\n          </p>\n          <div className={ingredientStyles.map}>\n            {items?.map((item) =>\n              item.type === \"main\" &&\n              <Card key={item._id} item={item} onClick={() => { clickItem(item) }} />)\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\nexport default BurgerIngredients;","import styles from './modal.module.css';\n\ntype TModalOverlay = {\n   children?: React.ReactNode,\n   onClick: ()=>void\n} & React.ButtonHTMLAttributes<HTMLButtonElement>;\n\nexport const ModalOverlay: React.FC<TModalOverlay> = ({children, onClick}) => {\n   return (\n      <div onClick={onClick} className={styles.modaloverlay}>\n         {children}\n      </div>\n   )\n}\n\n\n","import { useEffect, FC, ReactNode } from 'react';\nimport { Button, CloseIcon, } from '@ya.praktikum/react-developer-burger-ui-components';\nimport ReactDOM from 'react-dom';\nimport { ModalOverlay } from './modal-overlay';\nimport styles from './modal.module.css';\n\ntype TModal = {\n    children?: ReactNode,\n    isOpen: boolean,\n    onClose: () => void\n}\n\nconst modalRoot = document.getElementById('modals') || document.body;\n\nexport const Modal: FC<TModal> = ({ onClose, isOpen, children }) => {\n    useEffect(() => {\n        const handleEscape = (e: KeyboardEvent) => {\n            e.code === \"Escape\" && onClose();\n        }\n        document.addEventListener(\"keydown\", handleEscape);\n        return () => {\n            document.removeEventListener(\"keydown\", handleEscape);\n        }\n    }, [onClose])\n    if (!isOpen) return null;\n    return ReactDOM.createPortal(\n        <>\n            <ModalOverlay onClick={onClose} />\n            <div className={styles.modal} >\n                <div className={styles.header}>\n                    <div className={styles.button}>\n                        <Button type=\"secondary\" size=\"small\" onClick={onClose} >\n                            <CloseIcon type=\"primary\" />\n                        </Button>\n                    </div>\n                </div>\n                {children}\n            </div>\n        </>\n        , modalRoot);\n}\n\n","export default __webpack_public_path__ + \"static/media/done.fd977731.svg\";","import done from '../../images/done.svg';\nimport styles from './order.module.css';\nimport { useSelector } from '../../services/hooks';\n\nexport default function OrderDetails() {\n  const order = useSelector((state) => state.burger?.order);\n  console.log(order)\n  if (!order?.success)\n    return (\n      <p className=\"text text_type_main-large mb-15\"> Ваш заказ загружается...</p>\n    )\n  return (\n    <div className={styles.component} >\n      <p className=\"text text_type_main-large\">{order?.name}</p>\n      <p className=\"text text_type_digits-large\">{order?.order?.number}</p>\n      <p className=\"text text_type_main-medium\">\n        идентификатор заказа\n      </p>\n      <img src={done} alt=\"done\" className={styles.img} />\n      <p className=\"text text_type_main-default\">\n        Ваш заказ начали готовить\n      </p>\n      <p className=\"text text_type_main-default text_color_inactive\">\n        Дождитесь готовности на орбитальной станции\n      </p>\n    </div>\n  )\n}\n\n\n\n","import React from 'react';\nimport { v4 as uuidv4 } from \"uuid\"\nimport constructorStyles from './burger-constructor.module.css';\nimport { Button, DragIcon, ConstructorElement, CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport {Modal} from '../modal/modal';\nimport OrderDetails from '../order-details/order-details';\nimport { TIngredient } from '../../utils/types';\nimport { useDrag, useDrop } from \"react-dnd\";\nimport { useDispatch, useSelector } from '../../services/hooks';\nimport { getOrderID, deleteIngredient, addIngredient, changeSortIngredient, resetOrder, closeModalOrder, openModalOrder } from '../../services/actions/burger';\nimport { useHistory } from 'react-router-dom';\n\n\nconst Constructor: React.FC<TConstructor> = ({ item, index }) => {\n  const ref = React.useRef<HTMLDivElement>(null);\n  const dispatch = useDispatch();\n  const [, dragRef] = useDrag({\n    type: \"ingredient\",\n    item: { index }\n  });\n\n  const [, dropTarget] = useDrop({\n    accept: \"ingredient\",\n    hover: (item: any) => {\n      if (!ref.current) return;\n      const dragIndex = item.index;\n      const hoverIndex = index;\n      if (dragIndex === hoverIndex) return;\n      dispatch(changeSortIngredient(dragIndex, hoverIndex))\n      item.index = hoverIndex;\n    }\n  });\n\n  const onClose = () => {\n    dispatch(deleteIngredient(item?.uuid));\n  }\n\n  dragRef(dropTarget(ref));\n\n  return (\n    <div className={constructorStyles.element} ref={ref} >\n      <DragIcon type=\"primary\" />\n      <ConstructorElement\n        text={item?.name}\n        price={item?.price}\n        thumbnail={item?.image}\n        handleClose={onClose}\n      />\n    </div>\n  )\n}\n\nconst BurgerConstructor = () => {\n  const dispatch = useDispatch();\n  const constructor = useSelector((store) => store.burger.constructor ?? []);\n  const bun = constructor.find((ingredient) => ingredient?.type === 'bun');\n  const other = constructor.filter((ingredient) => ingredient?.type && ingredient?.type !== 'bun');\n  const open = useSelector((store) => store.burger.modalOrder);\n  const history = useHistory();\n  const loggedIn = useSelector((store) => store.auth.loggedIn);\n  \n  const total: number = React.useMemo(\n    () =>\n      constructor\n        ? constructor.filter((ingredient) => ingredient?.price).reduce((sum, current) => sum + current.price, 0)\n        : 0,\n    [constructor]\n  );\n\n  const [{ isDrop }, dropTarget] = useDrop({\n    accept: \"ingredients\",\n    drop: (ingredient: any) => {\n      if (bun && ingredient.type === \"bun\") {\n        dispatch(deleteIngredient(bun?.uuid));\n      }\n      dispatch(addIngredient({ ...ingredient, uuid: uuidv4() }))\n    },\n    collect: (monitor) => ({\n      isDrop: monitor.isOver(),\n    }),\n  });\n\n  const clickOrder = () => {\n    if (loggedIn) {\n      const data = constructor.map(((item) => item._id));\n      console.log(data)\n      dispatch(getOrderID(data));\n      setTimeout(() => {\n        dispatch(openModalOrder())\n      }, 1000)\n    } else {\n      history.push(\"/login\");\n    }\n  }\n\n  const onClose = () => {\n    dispatch(closeModalOrder()); \n    console.log(open)\n    dispatch(resetOrder());\n  }\n\n  const classNameContainer = `${constructorStyles.container} ${isDrop && constructorStyles.drop}`\n\n  return (\n    <React.Fragment>\n      <Modal\n        isOpen={open}\n        onClose={onClose}\n      > <OrderDetails />\n      </Modal>\n      <div className={classNameContainer} ref={dropTarget}>\n        {\n          bun\n            ? <ConstructorElement\n              type=\"top\"\n              isLocked={true}\n              text={`${bun.name} (верх)`}\n              price={bun.price}\n              thumbnail={bun.image}\n            />\n            : <p className=\"text text_type_main-medium\" >\n              Перенесите сюда ингредиенты для бургера\n            </p>\n        }\n        <div className={constructorStyles.main}>\n          {other &&\n            other?.map((item, i) =>\n              (<Constructor key={item?.uuid} item={item} index={i} />))\n          }\n        </div>\n        {\n          bun\n          && <ConstructorElement\n            type=\"bottom\"\n            isLocked={true}\n            text={`${bun.name} (низ)`}\n            price={bun.price}\n            thumbnail={bun.image}\n          />\n        }\n        <div className={constructorStyles.cost}>\n          <div className={constructorStyles.price}>\n            <p className=\"text text_type_digits-medium\" >\n              {total}\n              <CurrencyIcon type=\"primary\" />\n            </p>\n          </div>\n          <Button type=\"primary\" size=\"large\" onClick={clickOrder} disabled={total === 0}>\n            Оформить заказ\n          </Button>\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\n\ntype TConstructor = {\n  item: TIngredient,\n  index: number,\n}\n\nexport default BurgerConstructor;","import appStyles from './pages.module.css';\nimport BurgerIngredients from '../components/burger-ingredients/burger-ingredient'\nimport BurgerConstructor from '../components/burger-constructor/burger-constructor';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { DndProvider } from 'react-dnd';\n\nfunction HomePage() {\n    return (\n        <div className={appStyles.App}>\n            <main className={appStyles.page_content}>\n                <DndProvider backend={HTML5Backend}>\n                    <BurgerIngredients />\n                    <BurgerConstructor />\n                </DndProvider>\n            </main>\n        </div>\n    )\n}\n\nexport default HomePage;","import styles from './pages.module.css';\nimport { Redirect, useHistory, useLocation } from 'react-router-dom';\nimport React, { useState, useRef, SyntheticEvent } from 'react';\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { login } from '../services/actions/auth';\nimport { useDispatch, useSelector } from '../services/hooks';\n\ninterface LocationState {\n  from: {\n    pathname: string;\n  };\n}\n\nexport default function LoginPage() {\n  const history = useHistory();\n  const location = useLocation<LocationState>();\n  const inputRef = useRef(null)\n  const [form, setValue] = useState({ email: '', password: '' });\n  const dispatch = useDispatch();\n  const loggedIn = useSelector((state) => state.auth.loggedIn);\n\n  const onChange = (e:React.ChangeEvent<HTMLInputElement>) => {\n    setValue({ ...form, [e.target.name]: e.target.value });\n  };\n\n  const onRegister = () => {\n    history.replace({ pathname: '/register' });\n  };\n\n  const onForgotPassword = () => {\n    history.replace({ pathname: '/forgot-password' });\n  };\n\n  const onSubmit = (e: SyntheticEvent<Element, Event>) => {\n    e.preventDefault();\n    dispatch(login(form.email, form.password));\n};\n\nif (loggedIn) {\n  return (\n      <Redirect to={location.state?.from || '/'} />\n  );\n}\n\n  return (\n    <div className={styles.App}>\n      <div className={styles.inputs}>\n        <div className={styles.input}>\n          <p className=\"text text_type_main-medium\">\n            Вход\n          </p>\n        </div>\n        <form onSubmit={onSubmit}>\n        <div className={styles.input}>\n          <Input\n            type='text'\n            placeholder='E-mail'\n            onChange={onChange}\n            value={form.email}\n            name='email'\n            error={false}\n            ref={inputRef}\n            errorText={'Ошибка'}\n            size={'default'}\n          />\n        </div>\n        <div className={styles.input}>\n        <Input\n            type='text'\n            placeholder='Пароль'\n            onChange={onChange}\n            value={form.password} \n            name='password'\n            error={false}\n            ref={inputRef}\n            errorText={'Ошибка'}\n            size={'default'}\n          />\n        </div>\n        <Button type=\"primary\" size=\"medium\" >\n          Войти\n        </Button>\n        </form>\n      </div>\n      <div className={styles.save}>\n        <p className=\"text text_type_main-default text_color_inactive\">\n          Вы — новый пользователь?\n        </p>\n        <Button type=\"secondary\" size=\"medium\" onClick={onRegister}>\n          Зарегистрироваться\n        </Button>\n      </div>\n      <div className={styles.save}>\n        <p className=\"text text_type_main-default text_color_inactive\">\n          Забыли пароль?\n        </p>\n        <Button type=\"secondary\" size=\"medium\" onClick={onForgotPassword}>\n          Восстановить пароль\n        </Button>\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport styles from './profile-nav.module.css';\nimport { Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { useDispatch, useSelector } from '../../services/hooks';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { logout } from '../../services/actions/auth';\n\nexport const ProfileNav: React.FC = () => {\n  const dispatch = useDispatch();\n  const loggedIn = useSelector((state) => state.auth.loggedIn);\n  const history = useHistory();\n\n  const onLogout = () => {\n    dispatch(logout());\n    if (!loggedIn) {\n      return (\n        <Redirect to={\"/login\"} />\n      );\n    }\n  };\n\n  const onProfile = () => {\n    history.replace({ pathname: '/profile' });\n  };\n\n  const onProfileOrder = () => {\n    history.replace({ pathname: '/profile/orders' });\n  };\n\n  return (\n    <React.Fragment>\n      <div className={styles.buttons}>\n        <Button type=\"secondary\" size=\"large\" onClick={onProfile}>\n          <p className=\"text text_type_main-medium\">\n            Профиль\n          </p>\n        </Button>\n        <Button type=\"secondary\" size=\"large\" onClick={onProfileOrder}>\n          <p className=\"text text_type_main-medium\">\n            История заказов\n          </p>\n        </Button>\n        <Button type=\"secondary\" size=\"large\" onClick={onLogout}>\n          <p className=\"text text_type_main-medium\">\n            Выход\n          </p>\n        </Button>\n        <p className=\"text text_type_main-default text_color_inactive mt-20 ml-10\">\n          В этом разделе Вы можете изменить свои персональные данные\n        </p>\n      </div>\n    </React.Fragment>\n  )\n}","import styles from './pages.module.css';\nimport React, { useState, useRef } from 'react';\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { useDispatch, useSelector } from '../services/hooks';\nimport { updateUser} from '../services/actions/auth';\nimport { ProfileNav } from '../components/profile-nav/profile-nav';\n\nexport default function ProfilePage() {\n  const inputRef = useRef<HTMLInputElement>(null)\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.auth.user);\n  const [form, setForm] = useState({ ...user, password: \"\" });\n  const [isSame, setSame] = useState<boolean>(true);\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n    setSame(false);\n  }\n\n  const onSubmit = (e: React.SyntheticEvent<Element, Event>) => {\n    e.preventDefault();\n    dispatch(updateUser(form.email, form.name));\n  };\n\n  const onReset = () => {\n    setForm({ ...user, password: form.password });\n    setSame(true);\n  };\n\n  return (\n    <div className={styles.App}>\n      <main className={styles.page_content}>\n        <ProfileNav /> \n        <form className={styles.buttons} onSubmit={onSubmit}>\n          <div className={styles.input}>\n            <Input\n              type='text'\n              placeholder='Имя'\n              icon='EditIcon'\n              onChange={onChange}\n              value={form.name}\n              name='name'\n              error={false}\n              ref={inputRef}\n            />\n          </div>\n          <div className={styles.input}>\n            <Input\n              type='text'\n              placeholder='Логин'\n              onChange={onChange}\n              icon='EditIcon'\n              value={form.email}\n              name='email'\n              error={false}\n              ref={inputRef}\n              errorText={'Ошибка'}\n            />\n          </div>\n          <div className={styles.input}>\n            <Input\n              type='text'\n              placeholder='Пароль'\n              onChange={onChange}\n              icon='EditIcon'\n              value={form.password}\n              name='password'\n              error={false}\n              ref={inputRef}\n              errorText={'Ошибка'}\n            />\n          </div>\n          <div className={styles.save}>\n            <Button type='secondary' onClick={onReset} disabled={isSame} >\n              Отмена\n            </Button>\n            <Button disabled={isSame}>\n              Сохранить\n            </Button>\n          </div>\n        </form>\n\n      </main>\n    </div>\n  );\n}","import { TOrders } from '../../utils/types';\n\nexport const WS_CONNECTION_START: \"WS_CONNECTION_START\" = \"WS_CONNECTION_START\";\nexport const WS_CONNECTION_SUCCESS: \"WS_CONNECTION_SUCCESS\" = \"WS_CONNECTION_SUCCESS\";\nexport const WS_CONNECTION_ERROR: \"WS_CONNECTION_ERROR\" = \"WS_CONNECTION_ERROR\";\nexport const WS_CONNECTION_CLOSED: \"WS_CONNECTION_CLOSED\" = \"WS_CONNECTION_CLOSED\";\nexport const WS_GET_ORDERS: \"WS_GET_ORDERS\" = \"WS_GET_ORDERS\";\nexport const OPEN_WS_MODAL: \"OPEN_WS_MODAL\" = \"OPEN_WS_MODAL\";\nexport const CLOSE_WS_MODAL: \"CLOSE_WS_MODAL\" = \"CLOSE_WS_MODAL\";\n\nexport interface IWsConnectionStartAction {\n    readonly type: typeof WS_CONNECTION_START;\n    readonly withToken: boolean\n    readonly payload: string\n}\n\nexport interface IWsConnectionSuccessAction {\n    readonly type: typeof WS_CONNECTION_SUCCESS;\n}\n\nexport interface IWsConnectionErrorAction {\n    readonly type: typeof WS_CONNECTION_ERROR;\n}\n\nexport interface IWsConnectionClosedAction {\n    readonly type: typeof WS_CONNECTION_CLOSED;\n}\n\nexport interface IWsGetAction {\n    readonly type: typeof WS_GET_ORDERS;\n    readonly orders: TOrders;\n}\n\nexport interface IOpenWsModal {\n    readonly type: typeof OPEN_WS_MODAL;\n}\n\nexport interface ICloseWsModal {\n    readonly type: typeof CLOSE_WS_MODAL;\n}\n\nexport const wsConnectionStartAction = (withToken: boolean, payload: string): IWsConnectionStartAction => ({\n    type: WS_CONNECTION_START,\n    withToken,\n    payload\n});\n\nexport const wsConnectionSuccessAction = (): IWsConnectionSuccessAction => ({\n    type: WS_CONNECTION_SUCCESS\n});\n\nexport const wsConnectionErrorAction = (): IWsConnectionErrorAction => ({\n    type: WS_CONNECTION_ERROR\n});\n\nexport const wsConnectionClosedAction = (): IWsConnectionClosedAction => ({\n    type: WS_CONNECTION_CLOSED\n});\n\nexport const wsGetAction = (orders: TOrders): IWsGetAction => ({\n    type: WS_GET_ORDERS,\n    orders\n});\n\nexport const wsOpenModal = (): IOpenWsModal => {\n    return {\n    type: OPEN_WS_MODAL,\n}};\n\nexport const wsCloseModal = (): ICloseWsModal => {\n    return {\n    type: CLOSE_WS_MODAL,\n}};\n\nexport type TWsActions = {\n    wsInit: typeof WS_CONNECTION_START;\n    onOpen: typeof WS_CONNECTION_SUCCESS;\n    onClose: typeof WS_CONNECTION_CLOSED;\n    onError: typeof WS_CONNECTION_ERROR;\n    onGetOrders: typeof WS_GET_ORDERS;\n    wsOpenModal: typeof OPEN_WS_MODAL;\n    wsCloseModal: typeof CLOSE_WS_MODAL;\n};\n\nexport const wsActions: TWsActions = {\n    wsInit: WS_CONNECTION_START,\n    onOpen: WS_CONNECTION_SUCCESS,\n    onClose: WS_CONNECTION_CLOSED,\n    onError: WS_CONNECTION_ERROR,\n    onGetOrders: WS_GET_ORDERS,\n    wsOpenModal: OPEN_WS_MODAL,\n    wsCloseModal: CLOSE_WS_MODAL,\n  };\n\n  export type TFeedActions = \n    | IWsConnectionStartAction\n    | IWsConnectionSuccessAction\n    | IWsConnectionErrorAction\n    | IWsConnectionClosedAction\n    | IWsGetAction\n    | ICloseWsModal\n    | IOpenWsModal","import React, { FC } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport styles from './order-item.module.css';\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { useSelector, useDispatch } from '../../services/hooks';\nimport { TIngredient, TOrderInfo } from '../../utils/types';\nimport { formatStatus } from '../../services/utils';\nimport { wsOpenModal } from '../../services/actions/feed';\nimport { formatRelative } from 'date-fns';\nimport { ru } from 'date-fns/locale';\n\nconst OrderItem: FC<TOrderInfo> = ({ number, createdAt, name, ingredientsId, id, status }) => {\n    const location = useLocation();\n    const dispatch = useDispatch();\n    const ingredients = useSelector((store) => store.burger.ingredients);\n    const orderIngredients = ingredients.filter((ingredient: TIngredient) => ingredientsId.includes(ingredient._id)).reverse();\n    const orderIngredientsShow = orderIngredients.length > 5 ? orderIngredients.slice(0, 5) : orderIngredients;\n    const orderIngredientsHidden = orderIngredients.length > 5 ? orderIngredients.length - 5 : 0;\n\n    const totalPrice = React.useMemo(\n        () => orderIngredients ? orderIngredients.reduce((sum: number, current: TIngredient) => sum + current.price, 0) : 0,\n        [orderIngredients]\n    );\n\n    const onClick = () => {\n        dispatch(wsOpenModal)\n    }\n\n    return (\n        <Link to={{ pathname: `${location.pathname}/${id}`, state: { background: location } }} className={styles.link} onClick={onClick}>\n            <div className={styles.item}>\n                <div className={styles.data}>\n                    <p className=\"text text_type_digits-default\">#{number}</p>\n                    <p className=\"text text_type_main-default text_color_inactive\">{formatRelative(new Date(createdAt), new Date(), {\n                        locale: ru,\n                    })}</p>\n                </div>\n                <p className=\"text text_type_main-medium pt-6 pb-4\">{name}</p>\n                <p className={styles.status}>{formatStatus(status)}</p>\n                <div className={styles.data}>\n                    <ul className={styles.list}>\n                        {orderIngredientsShow.map((item: TIngredient, index: number) => (\n                            <div key={index} className={styles.images}>\n                                <img className={styles.image} src={item.image} alt={item.name} />\n                                {index === 0 && orderIngredientsHidden > 0 && (\n                                    <p className={styles.count}>+{orderIngredientsHidden}</p>\n                                )}\n                            </div>\n                        ))}\n                    </ul>\n                    <div className={styles.price}>\n                        <p className=\"text text_type_digits-default\">{totalPrice}</p>\n                        <CurrencyIcon type=\"primary\" />\n                    </div>\n                </div>\n            </div>\n        </Link>\n    )\n}\n\nexport default OrderItem;","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from '../services/hooks';\nimport styles from './pages.module.css';\nimport {\n  wsConnectionClosedAction,\n  wsConnectionStartAction,\n} from '../services/actions/feed';\nimport OrderItem from '../components/order-item/order-item';\nimport { TOrder } from '../utils/types';\nimport { ProfileNav } from '../components/profile-nav/profile-nav';\n\nexport default function ProfileOrders() {\n  const order = useSelector((store) => store.feed.orders);\n  const [orders, setOrders] = useState<TOrder[]>([]);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(wsConnectionStartAction(true, ''));\n\n    return () => {\n      dispatch(wsConnectionClosedAction());\n    };\n  }, [dispatch]);\n\n\n  useEffect(() => {\n    if (order) {\n      setOrders(order!.orders);\n    }\n  }, [order]);\n\n  if (!order) {\n    return null;\n  }\n  return (\n    <div className={styles.page_content}>\n      <ProfileNav />\n      <div className={styles.main}>\n        {orders?.map((item: TOrder) => (\n          <OrderItem\n            key={item._id}\n            id={item._id}\n            number={item.number}\n            createdAt={item.createdAt}\n            name={item.name}\n            ingredientsId={item.ingredients}\n            status={item.status}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n","import styles from './pages.module.css';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport React, { useState, useRef } from 'react';\nimport { Input, PasswordInput, Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { useDispatch, useSelector } from '../services/hooks';\nimport { register } from '../services/actions/auth';\n\nexport default function RegisterPage() {\n    const history = useHistory();\n    const inputRef = useRef<HTMLInputElement>(null)\n    const [form, setValue] = useState({ email: '', password: '', name: '' });\n    const dispatch = useDispatch();\n    const loggedIn = useSelector((state) => state.auth.loggedIn);\n\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setValue({ ...form, [e.target.name]: e.target.value });\n    };\n\n    const onLogin = () => {\n        history.replace({ pathname: '/login' });\n    };\n\n    const onSubmit = (e: React.SyntheticEvent<Element, Event>) => {\n        e.preventDefault();\n        dispatch(register(form.email, form.password, form.name));\n    };\n\n    if (loggedIn) {\n        return (\n            <Redirect to={\"/\"} />\n        );\n    }\n\n    return (\n        <div className={styles.App}>\n            <div className={styles.inputs}>\n                <div className={styles.input}>\n                    <p className=\"text text_type_main-medium\">\n                        Регистрация\n                    </p>\n                </div>\n                <form onSubmit={onSubmit}>\n                    <div className={styles.input}>\n                        <Input\n                            type='text'\n                            placeholder='Имя'\n                            onChange={onChange}\n                            value={form.name}\n                            name='name'\n                            error={false}\n                            ref={inputRef}\n                            errorText={'Ошибка'}\n                        />\n                    </div>\n                    <div className={styles.input}>\n                        <Input\n                            type='text'\n                            placeholder='E-mail'\n                            onChange={onChange}\n                            value={form.email}\n                            name='email'\n                            error={false}\n                            ref={inputRef}\n                            errorText={'Ошибка'}\n                        />\n                    </div>\n                    <div className={styles.input}>\n                        <PasswordInput onChange={onChange} value={form.password} name={'password'} />\n                    </div>\n                    <Button type=\"primary\" size=\"medium\" >\n                        Зарегистрироваться\n                    </Button>\n                </form>\n            </div>\n            <div className={styles.save}>\n                <p className=\"text text_type_main-default text_color_inactive\">\n                    Уже зарегестрированы?\n                </p>\n                <Button type=\"secondary\" size=\"medium\" onClick={onLogin}>\n                    Войти\n                </Button>\n            </div>\n        </div>\n    );\n}","import styles from './pages.module.css';\nimport { useHistory, Redirect } from 'react-router-dom';\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport React from 'react';\nimport { useDispatch, useSelector } from '../services/hooks';\nimport { forgotPassword } from '../services/actions/auth';\n\nexport default function ForgotPasswordPage() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const loggedIn = useSelector((store) => store.auth.loggedIn);\n  const [form, setForm] = React.useState({ email: \"\" });\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = (e: React.SyntheticEvent<Element, Event>) => {\n    e.preventDefault();\n    dispatch(forgotPassword(form.email));\n    history.push({ pathname: '/reset-password', state: { prevPathname: history.location.pathname } });\n  };\n\n  if (loggedIn) {\n    return (\n      <Redirect to={\"/\"} />\n    );\n  }\n\n  const onLogin = () => {\n    history.replace({ pathname: '/login' });\n  };\n\n  return (\n    <div className={styles.App}>\n        <div className={styles.inputs}>\n          <div className={styles.input}>\n            <p className=\"text text_type_main-medium\">\n              Восстановление пароля\n            </p>\n          </div>\n          <form onSubmit={onSubmit}>\n          <div className={styles.input}>\n            <Input\n              type='text'\n              placeholder='E-mail'\n              onChange={onChange}\n              value={form.email}\n              name='email'\n              error={false}\n              errorText={'Ошибка'}\n              size={'default'}\n            />\n          </div>\n          <Button type=\"primary\" size=\"medium\" >\n            Восстановить\n          </Button>\n          </form>\n        </div>\n        <div className={styles.save}>\n          <p className=\"text text_type_main-default text_color_inactive\">\n            Вспомнили пароль?\n          </p>\n          <Button type=\"secondary\" size=\"medium\" onClick={onLogin}>\n            Войти\n          </Button>\n        </div>\n    </div>\n  );\n}","import styles from './pages.module.css';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from '../services/hooks';\nimport { Input, PasswordInput, Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { resetPassword } from '../services/actions/auth';\n\nexport default function ResetPasswordPage() {\n  const auth = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const prevPathname = history.location.state;\n  const [form, setForm] = useState({ password: \"\", token: \"\" });\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n\n  const onLogin = () => {\n    history.replace({ pathname: '/login' });\n  };\n\n  const onSubmit = (e: React.SyntheticEvent<Element, Event>) => {\n    e.preventDefault();\n    dispatch(resetPassword(form.password, form.token));\n    if (!auth?.resetPasswordError) {\n      history.push('/login');\n    }\n    else {\n      alert(\"Не удалось восстановить пароль:(\")\n    }\n  };\n\n  if (!prevPathname) {\n    return (\n      <Redirect to={'/login'} />\n    );\n  }\n\n  if (auth?.loggedIn) {\n    return (\n      <Redirect to={\"/\"} />\n    );\n  }\n\n  return (\n    <div className={styles.App}>\n      <div className={styles.inputs}>\n        <div className={styles.input}>\n          <p className=\"text text_type_main-medium\">\n            Восстановление пароля\n          </p>\n        </div>\n        <form onSubmit={onSubmit}>\n        <div className={styles.input}>\n          <PasswordInput onChange={onChange} value={form.password} name={'password'} />\n        </div>\n        <div className={styles.input}>\n          <Input\n            type='text'\n            placeholder='Введите код из письма'\n            onChange={onChange}\n            value={form.token}\n            name='token'\n            error={false}\n            errorText={'Ошибка'}\n            size={'default'}\n          />\n        </div>\n        <Button type=\"primary\" size=\"medium\">\n          Сохранить\n        </Button>\n        </form>\n      </div>\n      <div className={styles.save}>\n        <p className=\"text text_type_main-default text_color_inactive\">\n          Вспомнили пароль?\n        </p>\n        <Button type=\"secondary\" size=\"medium\" onClick={onLogin}>\n          Войти\n        </Button>\n      </div>\n    </div>\n  );\n}","import styles from './pages.module.css';\nimport { useSelector } from '../services/hooks';\nimport { useParams } from 'react-router-dom';\n\nconst IngredientDetails = () => {\n  const { id } = useParams<{ id?: string }>();\n  const ingredients = useSelector((state) => state.burger.ingredients);\n  const ingredient = ingredients?.find((ingredient) => ingredient._id === id);\n\n  return (\n    <div className={styles.component} >\n      <p className=\"text text_type_main-large\">\n        Детали ингредиента\n      </p>\n      <img src={ingredient?.image_large} alt=\"image_large\" />\n      <p className=\"text text_type_main-medium\">\n        {ingredient?.name}\n      </p>\n      <div className={styles.ingredient}>\n        <div>\n          <p className=\"text text_type_main-default text_color_inactive\">\n            Калории, ккал\n          </p>\n          <p className=\"text text_type_main-default text_color_inactive\">\n            {ingredient?.calories}\n          </p>\n        </div>\n        <div>\n          <p className=\"text text_type_main-default text_color_inactive\">\n            Белки, г\n          </p>\n          <p className=\"text text_type_main-default text_color_inactive\">\n            {ingredient?.proteins}\n          </p>\n        </div>\n        <div>\n          <p className=\"text text_type_main-default text_color_inactive\">\n            Жиры, г\n          </p>\n          <p className=\"text text_type_main-default text_color_inactive\">\n            {ingredient?.fat}\n          </p>\n        </div>\n        <div>\n          <p className=\"text text_type_main-default text_color_inactive\">\n            Углеводы, г\n          </p>\n          <p className=\"text text_type_main-default text_color_inactive\">\n            {ingredient?.carbohydrates}\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default IngredientDetails;\n","import { getCookie } from \"../utils\";\nimport { wsActions as wsActionTypes } from '../actions/feed';\nimport { Middleware, MiddlewareAPI } from \"redux\";\nimport { AppDispatch, RootState } from \"../utils\";\n\nexport const socketMiddleware = (wsUrl: string, wsActions: typeof wsActionTypes): Middleware<{}> => {\n  return (store: MiddlewareAPI<AppDispatch, RootState>) => {\n    let socket: WebSocket | null = null;\n\n    return next => (action) => {\n      const { dispatch } = store;\n      const { type, withToken, payload } = action;\n      const { wsInit, onOpen, onClose, onError, onGetOrders } = wsActions;\n      const accessCookie = getCookie('token')?.split(' ')[1];\n      const token = withToken ? accessCookie : '';\n\n      if (type === wsInit) {\n        socket = new WebSocket(withToken ? `${wsUrl}?token=${token}` : `${wsUrl}${payload}`);\n      }\n\n      if (socket) {\n        socket.send = event => {\n          dispatch({ type: onOpen, orders: event });\n        };\n        socket.onerror = event => {\n          dispatch({ type: onError, orders: event });\n        };\n        socket.onmessage = event => {\n          const { data } = event;\n          const parsed = JSON.parse(data);\n          dispatch({ type: onGetOrders, orders: parsed });\n        };\n        socket.onclose = event => {\n          dispatch({ type: onClose, orders: event });\n        };\n      }\n      next(action);\n    };\n  }\n}; ","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from '../services/hooks';\nimport styles from './pages.module.css';\nimport {\n  wsConnectionClosedAction,\n  wsConnectionStartAction,\n} from '../services/actions/feed';\nimport { formatRelative } from 'date-fns';\nimport { ru } from 'date-fns/locale';\nimport { TIngredient } from '../utils/types';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { formatStatus } from '../services/utils'\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\n\nconst OrderPage: React.FC = () => {\n  const { id } = useParams<{ id?: string }>();\n  const location = useLocation();\n  console.log(location.pathname.split('/')[1])\n  const orders = useSelector((state) => state.feed.orders);\n  const order = orders?.orders?.find((item) => item._id === id);\n  const ingredients = useSelector((store) => store.burger.ingredients);\n  const payload = location.pathname.split('/')[1]=='feed'? '/all' : ''\n  const orderIngredients = ingredients?.filter((ingredient: TIngredient) => order?.ingredients.includes(ingredient._id));\n\n  const totalPrice = orderIngredients.reduce((total: number, cur: TIngredient) => {\n    const sumIngredients = cur.type == 'bun' ? cur.price : cur.price * 2;\n    total += sumIngredients;\n    return total;\n  }, 0);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(wsConnectionStartAction( location.pathname.split('/')[1]=='feed'? false : true, payload));\n\n    return () => {\n      dispatch(wsConnectionClosedAction());\n    };\n  }, [dispatch]);\n\n  if (!order)\n  return (\n    <main className={styles.modal} >\n    <p className=\"text text_type_main-medium mt-30\"> Подождите, идет загрузка...</p>\n    </main>\n  )\n\n  return (\n    <main className={styles.modal} >\n      <p className=\"text text_type_digits-default \">#{order?.number}</p>\n      <div className={styles.content}>\n        <p className=\"text text_type_main-medium mt-10\"> {order?.name}</p>\n        <p className={styles.status}>{formatStatus(order?.status||'')}</p>\n        <p className=\"text text_type_main-medium mt-6 mb-3\">\n          Состав:\n        </p>\n        {orderIngredients?.map((item: TIngredient, index: number) => (\n          <div className={styles.ingredients} key={index}>\n            <img className={styles.image} src={item?.image_mobile} />\n            <p className=\"text text_type_main-default\">{item?.name}</p>\n            <div className={styles.total}>\n              <p className=\"text text_type_digits-default mr-2\">\n                {item.type === 'bun' ? 2 : 1} x {item?.price}\n              </p>\n              <CurrencyIcon type=\"primary\" />\n            </div>\n          </div>\n        ))}\n        <div className={styles.row}>\n          <p className=\"text text_type_main-default text_color_inactive \">{order ? formatRelative(new Date(order.createdAt), new Date(), {\n    locale: ru,\n  }) : ''}</p>\n          <div className={styles.total}>\n            <p className=\"text text_type_digits-default mr-2 \"> {totalPrice}</p>\n            <CurrencyIcon type=\"primary\" />\n          </div>\n        </div>\n      </div>\n    </main>\n  )\n}\n\nexport default OrderPage;\n\n","import { FC } from 'react';\nimport { TOrder } from '../../utils/types';\nimport styles from './orders-stats.module.css';\nimport {  useSelector } from '../../services/hooks';\n\nexport const OrdersStats: FC = () => {\n  const order = useSelector((store) => store.feed.orders);\n\n  if (!order) {\n    return null;\n  }\n\n  const done = order?.orders?.filter((item) => item.status === 'done').slice(0, 5);\n  const pending = order?.orders?.filter((item) => item.status === 'pending').slice(0, 5);\n\n  return (\n    <main className={styles.main}>\n      <div className={styles.orders}>\n        <div className={styles.column}>\n          <p className=\"text text_type_main-medium mt-10\">\n            Готовы:\n          </p>\n          {done?.map((order) => (\n            <p className={`text text_type_digits-default mt-2 ${styles.doneNumber}`} key={order._id}>{order.number}</p>\n          ))}\n        </div>\n        <div className={styles.column}>\n          <p className=\"text text_type_main-medium mt-10 ml-30\">\n            В работе:\n          </p>\n          {pending?.map((order: TOrder) => (\n            <p className={`text text_type_digits-default mt-2 ${styles.doneNumber}`} key={order._id}>{order.number}</p>\n          ))}\n        </div>\n      </div>\n      <p className=\"text text_type_main-medium mt-10\">\n        Выполнено за все время:\n      </p>\n      <p className={`text text_type_digits-large ${styles.count}`}>\n        {order.total}\n      </p>\n      <p className=\"text text_type_main-medium mt-10\">\n        Выполнено за сегодня:\n      </p>\n      <p className={`text text_type_digits-large ${styles.count}`}>\n        {order.totalToday}\n      </p>\n    </main>\n  );\n};\n","import { FC, useEffect } from 'react';\nimport { TOrder } from '../utils/types';\nimport { OrdersStats } from '../components/orders-stats/orders-stats';\nimport OrderItem from '../components/order-item/order-item';\nimport { useDispatch, useSelector } from '../services/hooks';\nimport {\n  wsConnectionClosedAction,\n  wsConnectionStartAction,\n} from '../services/actions/feed';\nimport styles from '../pages/pages.module.css';\n\nexport const FeedPage: FC = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(wsConnectionStartAction(false, '/all'));\n\n    return () => {\n      dispatch(wsConnectionClosedAction());\n    };\n  }, [dispatch]);\n\n  const orders = useSelector((store) => store.feed.orders.orders);\n  \n  return (\n    <main className={styles.page_content}>\n      <div className={styles.main}>\n            <h2 className=\"text text_type_main-large mt-10 ml-5\">Лента заказов</h2>\n            {orders?.map((item: TOrder) => (\n                    <OrderItem\n                        key={item._id}\n                        id={item._id}\n                        number={item.number}\n                        createdAt={item.createdAt}\n                        name={item.name}\n                        ingredientsId={item.ingredients}\n                        status={item.status}\n                    />\n                ))}\n        </div>\n      <OrdersStats />\n    </main>\n  )\n}","import { Route, Redirect, RouteProps, useLocation } from \"react-router-dom\";\nimport {  useSelector } from '../services/hooks';\nimport { FC } from 'react';\n\nconst ProtectedRoute: FC<RouteProps> = ({ children, ...rest }) => {\n    const loggedIn = useSelector((store) => store.auth?.loggedIn);\n    const location = useLocation();\n\n    return (\n        loggedIn!=undefined ?\n        <Route\n            {...rest}\n            render={({  }) => (\n                loggedIn ? (children) : (<Redirect to={{ pathname: '/login', state: { from: location } }} />) \n            )}\n        /> : null\n    );\n}\n\nexport default ProtectedRoute;","import headerStyles from './app-header.module.css';\nimport { Logo, BurgerIcon, ListIcon, ProfileIcon, } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { NavLink, useRouteMatch } from 'react-router-dom';\n\nconst AppHeader = () => {\n  const home = useRouteMatch(\"/\");\n  const list = useRouteMatch(\"/feed\");\n  const profile = useRouteMatch(\"/profile\");\n  const orders = useRouteMatch(\"/profile/orders\");\n  return (\n    <header className={headerStyles.header}>\n      <div className={headerStyles.content}>\n        <NavLink exact to=\"/\" className={headerStyles.button} activeClassName={headerStyles.button_active}>\n          <div className={headerStyles.content}><BurgerIcon type={home?.isExact ? \"primary\" : \"secondary\"} />\n            <p className={headerStyles.button_text} >Конструктор</p>\n          </div>\n        </NavLink>\n        <NavLink exact to=\"/feed\" className={headerStyles.button} activeClassName={headerStyles.button_active}>\n          <div className={headerStyles.content}><ListIcon type={list ? \"primary\" : \"secondary\"} />\n            <p className={headerStyles.button_text}>Лента заказов</p>\n          </div>\n        </NavLink>\n        <div className={headerStyles.logo}>\n          <Logo />\n        </div>\n        <NavLink exact to=\"/profile\" className={headerStyles.button} activeClassName={headerStyles.button_active}>\n          <div className={headerStyles.content}><ProfileIcon type={profile||orders ? \"primary\" : \"secondary\"} />\n            <p className={headerStyles.button_text}>Личный кабинет</p></div>\n        </NavLink>\n      </div>\n    </header>\n  )\n}\n\nexport default AppHeader;","import { useEffect, FC } from 'react';\nimport { useDispatch, useSelector } from '../../services/hooks';\nimport { getIngredientsData } from '../../services/actions/burger';\nimport { getUser } from '../../services/actions/auth'\nimport { Switch, Route, useHistory, useLocation } from 'react-router-dom';\nimport { HomePage, LoginPage, ProfilePage, RegisterPage, ForgotPasswordPage, ResetPasswordPage, IngredientDetails, FeedPage, ProfileOrders, OrderPage } from '../../pages';\nimport ProtectedRoute from '../../components/protected-routes'\nimport AppHeader from '../app-header/app-header';\nimport { Modal } from '../modal/modal';\nimport { closeModal } from '../../services/actions/burger';\nimport { wsCloseModal } from '../../services/actions/feed';\n\ntype TLocation = {\n  from: Location;\n  background?: Location;\n}\n\nconst App: FC = () => {\n  const dispatch = useDispatch();\n  let modalItem = useSelector((state) => state.burger.modal);\n  let modalWs = useSelector((state)=> state.feed.wsModal)\n  const history = useHistory();\n  const location = useLocation<TLocation>();\n  let background = location.state && location.state.background;\n\n  useEffect(\n    () => {\n      dispatch(getIngredientsData());\n      if (localStorage.refreshToken){\n        console.log(localStorage.refreshToken)\n        dispatch(getUser());\n      }\n      // @ts-ignore\n      history.replace()\n    },\n    [dispatch]\n  );\n\n  const onClose = () => {\n    dispatch(closeModal)\n    dispatch(wsCloseModal)\n    history.goBack()\n  }\n\n  return (\n    <div>\n      <AppHeader />\n      <Switch\n        // @ts-ignore\n        location={background || location}>\n        <Route path=\"/\" exact={true}>\n          <HomePage />\n        </Route>\n        <ProtectedRoute path=\"/profile/orders/:id\">\n          <OrderPage />\n        </ProtectedRoute>\n        <ProtectedRoute path=\"/profile/orders\">\n          <ProfileOrders />\n        </ProtectedRoute>\n        <ProtectedRoute path=\"/profile\" >\n          <ProfilePage />\n        </ProtectedRoute>\n        <Route path=\"/login\" exact={true}>\n          <LoginPage />\n        </Route>\n        <Route path=\"/register\" exact={true}>\n          <RegisterPage />\n        </Route>\n        <Route path=\"/forgot-password\" exact={true}>\n          <ForgotPasswordPage />\n        </Route>\n        <Route path=\"/reset-password\" exact={true}>\n          <ResetPasswordPage />\n        </Route>\n        <Route path=\"/ingredients/:id\" >\n          <IngredientDetails />\n        </Route>\n        <Route path=\"/feed/:id\" exact={true}>\n          <OrderPage />\n        </Route>\n        <Route path=\"/feed\" exact={true}>\n          <FeedPage />\n        </Route>\n      </Switch>\n      {modalItem && background &&\n        <Route path=\"/ingredients/:id\" exact={true}>\n          <Modal isOpen={modalItem} onClose={onClose}\n          > <IngredientDetails />\n          </Modal>\n        </Route>\n      }\n      { background &&\n        <Route path=\"/feed/:id\" exact={true}>\n          <Modal isOpen={modalWs} onClose={onClose}>\n            <OrderPage />\n          </Modal>\n        </Route>\n      }\n      {modalWs && background &&\n        <Route path=\"/profile/orders/:id\" exact={true}>\n          <Modal isOpen={modalWs} onClose={onClose}>\n            <OrderPage />\n          </Modal>\n        </Route>\n      }\n    </div>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { TBurgerActions, CHANGE_SORT, SET_TAB, ADD_INGREDIENT, DELETE_INGREDIENT, GET_INGREDIENTS_REQUEST, GET_INGREDIENTS_SUCCESS, GET_INGREDIENTS_ERROR, GET_ORDER_REQUEST, GET_ORDER_SUCCESS, GET_ORDER_ERROR, RESET_ORDER, OPEN_MODAL, OPEN_MODAL_ORDER, CLOSE_MODAL, CLOSE_MODAL_ORDER,\n} from '../actions/burger';\nimport { TIngredient, IOrderState } from '../../utils/types';\n\ntype TBurgerState = {\n    tab: string,\n    ingredients: Array<TIngredient>,\n    ingredientsLoading: boolean,\n    ingredientsError: boolean,\n    constructor: Array<TIngredient>,\n    modal: boolean,\n    modalOrder: boolean,\n    order: IOrderState,\n    orderLoading: boolean,\n    orderError: boolean,\n  };\n\nexport const burgerInitialState: TBurgerState = { \n    tab: \"one\",\n    ingredients: [],\n    ingredientsLoading: false,\n    ingredientsError: false,\n    constructor: [],\n    modal: false,\n    modalOrder: false,\n    order: {} as IOrderState,\n    orderLoading: false,\n    orderError: false,\n};\n\nexport const burgerReducer = (state = burgerInitialState, action: TBurgerActions): TBurgerState => {\n    switch (action.type) {\n        case GET_INGREDIENTS_REQUEST:\n            return {\n                ...state,\n                ingredientsLoading: true,\n                ingredientsError: false\n            }   \n        case GET_INGREDIENTS_SUCCESS:\n            return {\n                ...state,\n                ingredientsLoading: false,\n                ingredientsError: false,\n                ingredients: action.data\n            }                       \n        case GET_INGREDIENTS_ERROR:\n            return {\n                ...state,\n                ingredientsError: true,\n                ingredientsLoading: false,\n            } \n        case GET_ORDER_REQUEST:\n            return {\n                ...state,\n                orderLoading: true,\n                orderError: false,\n                order: {} as IOrderState\n            }\n        case GET_ORDER_SUCCESS:\n            return {\n                ...state,\n                orderLoading: false,\n                orderError: false,\n                order: action.data \n            }\n        case GET_ORDER_ERROR:\n            return {\n                ...state,\n                orderLoading: false,\n                orderError: true\n            }           \n        case ADD_INGREDIENT:\n            return {\n                ...state,\n                constructor:\n                    state.constructor \n                    ? action.item.type === \"bun\" ? [...state.constructor, action.item, action.item] : [...state.constructor, action.item]\n                    : action.item.type === \"bun\" ? [action.item, action.item]: [action.item]\n            };\n        case DELETE_INGREDIENT:\n            return {\n                ...state,\n                constructor: \n                    [...state.constructor].filter((item: TIngredient) => item.uuid!==action.id)\n            }\n        case OPEN_MODAL:\n            return {\n                ...state,\n                modal: true\n            }\n        case OPEN_MODAL_ORDER:\n            return {\n                ...state,\n                modalOrder: true\n            }            \n        case CLOSE_MODAL:\n            return {\n                ...state,\n                modal: false\n            }   \n        case CLOSE_MODAL_ORDER:\n            return {\n                ...state,\n                modalOrder: false\n            }                                 \n        case SET_TAB:\n            return {\n                ...state,\n                tab: action.tab\n            }  \n        case RESET_ORDER:\n            return {\n                ...state,\n                order: {} as IOrderState,\n                constructor: [],\n            }            \n        case CHANGE_SORT:\n            const items = state.constructor.filter((item: TIngredient) => item.type!==\"bun\");\n            const bun = state.constructor.filter((ingredient: TIngredient) => ingredient.type === 'bun');\n            const other=[...items];\n            const drag = other.splice(action.drag, 1)[0];\n            other.splice(action.hover, 0, drag)\n            return {\n                ...state,\n                constructor: [...bun, ...other]\n            }                          \n        default:\n            return state;\n    }\n}\n\n","import {\n    REGISTER_REQUEST,\n    REGISTER_SUCCESS,\n    REGISTER_ERROR,\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGIN_ERROR,\n    UPDATE_TOKEN_REQUEST,\n    UPDATE_TOKEN_SUCCESS,\n    UPDATE_TOKEN_ERROR,\n    LOGOUT_REQUEST,\n    LOGOUT_SUCCESS,\n    LOGOUT_ERROR,\n    USER_REQUEST,\n    USER_SUCCESS,\n    USER_ERROR,\n    UPDATE_USER_REQUEST,\n    UPDATE_USER_SUCCESS,\n    UPDATE_USER_ERROR,\n    FORGOT_PASSWORD_REQUEST,\n    FORGOT_PASSWORD_SUCCESS,\n    FORGOT_PASSWORD_ERROR,\n    RESET_PASSWORD_REQUEST,\n    RESET_PASSWORD_SUCCESS,\n    RESET_PASSWORD_ERROR,\n    TAuthActions\n } from '../actions/auth';\n\n    export type TAuthState = {\n        user: {\n            name: string,\n            email: string\n        };\n        registerRequest: boolean;\n        registerError: boolean;\n        loggedIn: any;\n        loginRequest: boolean;\n        loginError: boolean;\n        updateTokenRequest: boolean;\n        updateTokenError: boolean;\n        logoutRequest: boolean;\n        logoutError: boolean;\n        userRequest: boolean;\n        userError: boolean;\n        updateUserRequest: boolean;\n        updateUserError: boolean;\n        forgotPasswordRequest: boolean;\n        forgotPasswordError: boolean;\n        resetPasswordRequest: boolean;\n        resetPasswordError: boolean;\n    };\n\n    export const authInitialState = { \n        user: {\n            name: '',\n            email: ''\n        },\n        registerRequest: false,\n        registerError: false,\n        loggedIn: undefined,\n        loginRequest: false,\n        loginError: false,\n        updateTokenRequest: false,\n        updateTokenError: false,\n        logoutRequest: false,\n        logoutError: false,\n        userRequest: false,\n        userError: false,\n        updateUserRequest: false,\n        updateUserError: false,\n        forgotPasswordRequest: false,\n        forgotPasswordError: false,\n        resetPasswordRequest: false,\n        resetPasswordError: false,\n    };\n\n    export const authReducer = (state = authInitialState, action: TAuthActions):TAuthState => {\n        switch (action.type) {\n            case REGISTER_REQUEST: {\n                return {\n                    ...state,\n                    registerRequest: true,\n                    registerError: false,\n                };\n            }\n                case REGISTER_SUCCESS: {\n                    return {\n                        ...state,\n                        user: action.user,\n                        registerRequest: false,\n                        loggedIn: true\n                    };\n                }\n                case REGISTER_ERROR: {\n                    return {\n                        ...state,\n                        registerError: true,\n                        registerRequest: false,\n                    };\n                }\n                case LOGIN_REQUEST: {\n                    return {\n                        ...state,\n                        loginRequest: true,\n                        loginError: false,\n                    };\n                }\n                case LOGIN_SUCCESS: {\n                    return {\n                        ...state,\n                        user: action.user,\n                        loginRequest: false,\n                        loggedIn: true\n                    };\n                }\n                case LOGIN_ERROR: {\n                    return {\n                        ...state,\n                        loginError: true,\n                        loginRequest: false,\n                    };\n                }\n                case UPDATE_TOKEN_REQUEST: {\n                    return {\n                        ...state,\n                        updateTokenRequest: true,\n                        updateTokenError: false,\n                    };\n                }\n                case UPDATE_TOKEN_SUCCESS: {\n                    return {\n                        ...state,\n                        loggedIn: true,\n                        updateTokenRequest: false,\n                    };\n                }\n                case UPDATE_TOKEN_ERROR: {\n                    return {\n                        ...state,\n                        updateTokenError: true,\n                        updateTokenRequest: false,\n                    };\n                }\n                case LOGOUT_REQUEST: {\n                    return {\n                        ...state,\n                        logoutRequest: true,\n                        logoutError: false,\n                    };\n                }\n                case LOGOUT_SUCCESS: {\n                    return {\n                        ...state,\n                        loggedIn: false,\n                        user: {\n                            name: '',\n                            email: ''\n                        },\n                    };\n                }\n                case LOGOUT_ERROR: {\n                    return {\n                        ...state,\n                        logoutError: true,\n                        logoutRequest: false,\n                    };\n                }\n                case USER_REQUEST: {\n                    return {\n                        ...state,\n                        userRequest: true,\n                        userError: false,\n                    };\n                }\n                case USER_SUCCESS: {\n                    return {\n                        ...state,\n                        user: action.user,\n                        loggedIn: true,\n                        userRequest: false,\n                    };\n                }\n                case USER_ERROR: {\n                    return {\n                        ...state,\n                        userError: true,\n                        userRequest: false,\n                        loggedIn: false\n                    };\n                }\n                case UPDATE_USER_REQUEST: {\n                    return {\n                        ...state,\n                        updateUserRequest: true,\n                        updateUserError: false,\n                    };\n                }\n                case UPDATE_USER_SUCCESS: {\n                    return {\n                        ...state,\n                        user: action.user,\n                        updateUserRequest: false,\n                    };\n                }\n                case UPDATE_USER_ERROR: {\n                    return {\n                        ...state,\n                        updateUserError: true,\n                        updateUserRequest: false,\n                    };\n                }\n                case FORGOT_PASSWORD_REQUEST: {\n                    return {\n                        ...state,\n                        forgotPasswordRequest: true,\n                        forgotPasswordError: false,\n                    };\n                }\n                case FORGOT_PASSWORD_SUCCESS: {\n                    return {\n                        ...state,\n                        forgotPasswordError: false,\n                        forgotPasswordRequest: false,\n                    };\n                }\n                case FORGOT_PASSWORD_ERROR: {\n                    return {\n                        ...state,\n                        forgotPasswordError: true,\n                        forgotPasswordRequest: false,\n                    };\n                }\n                case RESET_PASSWORD_REQUEST: {\n                    return {\n                        ...state,\n                        resetPasswordRequest: true,\n                        resetPasswordError: false,\n                    };\n                }\n                case RESET_PASSWORD_SUCCESS: {\n                    return {\n                        ...state,\n                        resetPasswordError: false,\n                        resetPasswordRequest: false,\n                    };\n                }\n                case RESET_PASSWORD_ERROR: {\n                    return {\n                        ...state,\n                        resetPasswordError: true,\n                        resetPasswordRequest: false,\n                    };\n                }                                \n            default:\n                return state;\n        }\n    }","import { TOrders } from '../../utils/types';\nimport {\n  TFeedActions,\n  WS_CONNECTION_SUCCESS,\n  WS_CONNECTION_CLOSED,\n  WS_CONNECTION_ERROR,\n  WS_GET_ORDERS,\n  OPEN_WS_MODAL,\n  CLOSE_WS_MODAL\n} from '../actions/feed';\n\ntype TFeedState = {\n  wsConnected: boolean;\n  orders: TOrders;\n  wsModal: boolean;\n};\n\nexport const feedInitialState: TFeedState = {\n  wsConnected: false,\n  orders: {} as TOrders,\n  wsModal: true,\n};\n\nexport const feedReducer = (state = feedInitialState, action: TFeedActions): TFeedState => {\n  switch (action.type) {\n    case WS_CONNECTION_SUCCESS:\n      return {\n        ...state,\n        wsConnected: true,\n      };\n    case WS_CONNECTION_ERROR:\n      return {\n        ...state,\n        wsConnected: false,\n      };\n    case WS_CONNECTION_CLOSED:\n      return {\n        ...state,\n        wsConnected: false,\n      };\n    case WS_GET_ORDERS:\n      return {\n        ...state,\n        orders: action.orders,\n      }\n    case OPEN_WS_MODAL:\n      return {\n        ...state,\n        wsModal: true\n      }\n    case CLOSE_WS_MODAL:\n      return {\n        ...state,\n        wsModal: false\n      }\n    default:\n      return state;\n  }\n};","import { combineReducers } from 'redux';\nimport { burgerReducer } from './burger';\nimport { authReducer } from './auth';\nimport { feedReducer } from './feed';\n\nexport const rootReducer = combineReducers({\n    burger: burgerReducer,\n    auth: authReducer, \n    feed: feedReducer,\n});","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './reducers';\nimport { socketMiddleware } from './middleware';\nimport { wsActions } from './actions/feed';\nimport { WS_API_URL } from '../utils/api';\n\ndeclare global {\n    interface Window {\n      __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n    }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(thunk, socketMiddleware(WS_API_URL, wsActions)));\n\nexport const store = createStore(rootReducer, enhancer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App'\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './services/store';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n      <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient\":\"burger-ingredients_ingredient__1E_jZ\",\"tab\":\"burger-ingredients_tab__1Ru1Z\",\"main\":\"burger-ingredients_main__1liZB\",\"map\":\"burger-ingredients_map__3yu6H\",\"img\":\"burger-ingredients_img__GZGnF\",\"card\":\"burger-ingredients_card__61Bte\",\"counter\":\"burger-ingredients_counter__1RQZz\",\"burger\":\"burger-ingredients_burger__19AlY\",\"p\":\"burger-ingredients_p__uhNIW\",\"link\":\"burger-ingredients_link__2-zFo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"pages_App__1x-4Z\",\"page_content\":\"pages_page_content__3JA2F\",\"buttons\":\"pages_buttons__1qM5S\",\"inputs\":\"pages_inputs__2xtGi\",\"header\":\"pages_header__6QNo8\",\"input\":\"pages_input__S_VY-\",\"save\":\"pages_save__2s6c6\",\"text\":\"pages_text__Qy8jJ\",\"ingredient\":\"pages_ingredient__1yGIg\",\"ingredients\":\"pages_ingredients__37BNQ\",\"row\":\"pages_row__3l6L5\",\"component\":\"pages_component__39Paj\",\"main\":\"pages_main__1f08x\",\"status\":\"pages_status__3KOZO text text_type_main-default pb-6\",\"orders\":\"pages_orders__2y9bl\",\"modal\":\"pages_modal__kFX19\",\"content\":\"pages_content__2P6D3\",\"input_size_default\":\"pages_input_size_default__2Ve3g\",\"total\":\"pages_total__2yn4p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"order-item_item__2Of_p\",\"itemWidth\":\"order-item_itemWidth__1pyNS\",\"data\":\"order-item_data___9AOO\",\"list\":\"order-item_list__3b_D5\",\"count\":\"order-item_count__2B1Yq text text_type_digits-default\",\"price\":\"order-item_price__2o1lz\",\"images\":\"order-item_images__TkvHT\",\"image\":\"order-item_image__3rt8d\",\"link\":\"order-item_link__2pV0A\",\"status\":\"order-item_status__39PoF text text_type_main-default pb-6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"orders-stats_main__yO5rf\",\"orders\":\"orders-stats_orders__362Ka\",\"doneNumber\":\"orders-stats_doneNumber__3AJgc\",\"column\":\"orders-stats_column__3dqxB\",\"count\":\"orders-stats_count__GkQtG\",\"listColumn\":\"orders-stats_listColumn__yQqkG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"constructor\":\"burger-constructor_constructor__2Wifa\",\"locked\":\"burger-constructor_locked__2mq9u\",\"main\":\"burger-constructor_main__O9C0W\",\"element\":\"burger-constructor_element__10R7L\",\"cost\":\"burger-constructor_cost__3NqMY\",\"price\":\"burger-constructor_price__Q5cGy\",\"container\":\"burger-constructor_container__332QY\",\"drop\":\"burger-constructor_drop__1AmUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__1DF1f\",\"header\":\"modal_header__2iX3r\",\"button\":\"modal_button__3_zvg\",\"modaloverlay\":\"modal_modaloverlay__3upRD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"order_component__3RloR\",\"img\":\"order_img__3F8zU\"};"],"sourceRoot":""}