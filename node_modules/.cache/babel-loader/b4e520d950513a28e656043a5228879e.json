{"ast":null,"code":"import _objectSpread from\"/Users/annaplokhotnyuk/Documents/react-burger/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{WS_CONNECTION_SUCCESS,WS_CONNECTION_CLOSED,WS_CONNECTION_ERROR,WS_GET_ORDERS,OPEN_WS_MODAL,CLOSE_WS_MODAL}from'../actions/feed';var feedInitialState={wsConnected:false,orders:{},wsModal:true};export var feedReducer=function feedReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:feedInitialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case WS_CONNECTION_SUCCESS:return _objectSpread(_objectSpread({},state),{},{wsConnected:true});case WS_CONNECTION_ERROR:return _objectSpread(_objectSpread({},state),{},{wsConnected:false});case WS_CONNECTION_CLOSED:return _objectSpread(_objectSpread({},state),{},{wsConnected:false});case WS_GET_ORDERS:return _objectSpread(_objectSpread({},state),{},{orders:action.orders});case OPEN_WS_MODAL:return _objectSpread(_objectSpread({},state),{},{wsModal:true});case CLOSE_WS_MODAL:return _objectSpread(_objectSpread({},state),{},{wsModal:false});default:return state;}};","map":{"version":3,"sources":["/Users/annaplokhotnyuk/Documents/react-burger/src/services/reducers/feed.ts"],"names":["WS_CONNECTION_SUCCESS","WS_CONNECTION_CLOSED","WS_CONNECTION_ERROR","WS_GET_ORDERS","OPEN_WS_MODAL","CLOSE_WS_MODAL","feedInitialState","wsConnected","orders","wsModal","feedReducer","state","action","type"],"mappings":"kIACA,OAEEA,qBAFF,CAGEC,oBAHF,CAIEC,mBAJF,CAKEC,aALF,CAMEC,aANF,CAOEC,cAPF,KAQO,iBARP,CAgBA,GAAMC,CAAAA,gBAA4B,CAAG,CACnCC,WAAW,CAAE,KADsB,CAEnCC,MAAM,CAAE,EAF2B,CAGnCC,OAAO,CAAE,IAH0B,CAArC,CAMA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAgE,IAA/DC,CAAAA,KAA+D,2DAAvDL,gBAAuD,IAArCM,CAAAA,MAAqC,2CACzF,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKb,CAAAA,qBAAL,CACE,sCACKW,KADL,MAEEJ,WAAW,CAAE,IAFf,GAIF,IAAKL,CAAAA,mBAAL,CACE,sCACKS,KADL,MAEEJ,WAAW,CAAE,KAFf,GAIF,IAAKN,CAAAA,oBAAL,CACE,sCACKU,KADL,MAEEJ,WAAW,CAAE,KAFf,GAIF,IAAKJ,CAAAA,aAAL,CACE,sCACKQ,KADL,MAEEH,MAAM,CAAEI,MAAM,CAACJ,MAFjB,GAIF,IAAKJ,CAAAA,aAAL,CACE,sCACKO,KADL,MAEEF,OAAO,CAAE,IAFX,GAIF,IAAKJ,CAAAA,cAAL,CACE,sCACKM,KADL,MAEEF,OAAO,CAAE,KAFX,GAIF,QACE,MAAOE,CAAAA,KAAP,CAhCJ,CAkCD,CAnCM","sourcesContent":["import { TOrders } from '../../utils/types';\nimport {\n  TFeedActions,\n  WS_CONNECTION_SUCCESS,\n  WS_CONNECTION_CLOSED,\n  WS_CONNECTION_ERROR,\n  WS_GET_ORDERS,\n  OPEN_WS_MODAL,\n  CLOSE_WS_MODAL\n} from '../actions/feed';\n\ntype TFeedState = {\n  wsConnected: boolean;\n  orders: TOrders;\n  wsModal: boolean;\n};\n\nconst feedInitialState: TFeedState = {\n  wsConnected: false,\n  orders: {} as TOrders,\n  wsModal: true,\n};\n\nexport const feedReducer = (state = feedInitialState, action: TFeedActions): TFeedState => {\n  switch (action.type) {\n    case WS_CONNECTION_SUCCESS:\n      return {\n        ...state,\n        wsConnected: true,\n      };\n    case WS_CONNECTION_ERROR:\n      return {\n        ...state,\n        wsConnected: false,\n      };\n    case WS_CONNECTION_CLOSED:\n      return {\n        ...state,\n        wsConnected: false,\n      };\n    case WS_GET_ORDERS:\n      return {\n        ...state,\n        orders: action.orders,\n      }\n    case OPEN_WS_MODAL:\n      return {\n        ...state,\n        wsModal: true\n      }\n    case CLOSE_WS_MODAL:\n      return {\n        ...state,\n        wsModal: false\n      }\n    default:\n      return state;\n  }\n};"]},"metadata":{},"sourceType":"module"}