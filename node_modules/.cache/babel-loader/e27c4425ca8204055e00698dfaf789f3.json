{"ast":null,"code":"var _jsxFileName = \"/Users/annaplokhotnyuk/Documents/react-burger/react-burger/src/components/app/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getIngredientsData } from '../../services/actions/burger';\nimport { getUser } from '../../services/actions/auth';\nimport { Switch, Route, useHistory, useLocation } from 'react-router-dom';\nimport { HomePage, LoginPage, ProfilePage, RegisterPage, ForgotPasswordPage, ResetPasswordPage, IngredientDetails } from '../../pages';\nimport ProtectedRoute from '../../components/protected-routes';\nimport AppHeader from '../app-header/app-header';\nimport { Modal } from '../modal/modal';\nimport { closeModal } from '../../services/actions/burger';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  let modalItem = useSelector(state => state.burger.modal);\n  const history = useHistory();\n  const location = useLocation();\n  let background = location.state && location.state.background;\n  useEffect(() => {\n    dispatch(getIngredientsData());\n    if (localStorage.refreshToken) dispatch(getUser()); // @ts-ignore\n\n    history.replace();\n  }, [dispatch]);\n\n  const onClose = () => {\n    dispatch(closeModal);\n    history.goBack();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AppHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Switch // @ts-ignore\n    , {\n      location: background || location,\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        path: \"/profile\",\n        children: /*#__PURE__*/_jsxDEV(ProfilePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(RegisterPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/forgot-password\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(ForgotPasswordPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/reset-password\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(ResetPasswordPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/ingredients/:id\",\n        children: /*#__PURE__*/_jsxDEV(IngredientDetails, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 8\n    }, this), modalItem && background && /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/ingredients/:id\",\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: modalItem,\n        onClose: onClose,\n        children: [\" \", /*#__PURE__*/_jsxDEV(IngredientDetails, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 6\n  }, this);\n};\n\n_s(App, \"Dkk+7X9FU+TDkFZLpPxP/b0Diuw=\", false, function () {\n  return [useDispatch, useSelector, useHistory, useLocation];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/annaplokhotnyuk/Documents/react-burger/react-burger/src/components/app/App.tsx"],"names":["useEffect","useDispatch","useSelector","getIngredientsData","getUser","Switch","Route","useHistory","useLocation","HomePage","LoginPage","ProfilePage","RegisterPage","ForgotPasswordPage","ResetPasswordPage","IngredientDetails","ProtectedRoute","AppHeader","Modal","closeModal","App","dispatch","modalItem","state","burger","modal","history","location","background","localStorage","refreshToken","replace","onClose","goBack"],"mappings":"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","sourcesContent":["import { useEffect, FC } from 'react';\n import { RootStateOrAny, useDispatch, useSelector } from 'react-redux';\n import { getIngredientsData } from '../../services/actions/burger';\n import { getUser } from '../../services/actions/auth'\n import { Switch, Route, useHistory, useLocation } from 'react-router-dom';\n import { HomePage, LoginPage, ProfilePage, RegisterPage, ForgotPasswordPage, ResetPasswordPage, IngredientDetails } from '../../pages';\n import ProtectedRoute from '../../components/protected-routes'\n import AppHeader from '../app-header/app-header';\n import {Modal} from '../modal/modal';\n import { closeModal } from '../../services/actions/burger';\n\n type TLocation = {\n  from: Location;\n  background?: Location;\n}\n\n const App:FC = () => {\n   const dispatch = useDispatch();\n   let modalItem = useSelector((state: RootStateOrAny )=> state.burger.modal);\n   const history = useHistory();\n   const location = useLocation<TLocation>();\n   let background = location.state && location.state.background;\n\n   useEffect(\n     () => {\n       dispatch(getIngredientsData());\n       if (localStorage.refreshToken)\n       dispatch(getUser());\n       // @ts-ignore\n       history.replace()\n     },\n     [dispatch]\n   );\n\n   const onClose = () => {\n     dispatch(closeModal)\n     history.goBack()\n   }\n\n   return (\n     <div>\n       <AppHeader />\n       <Switch \n       // @ts-ignore\n       location={background || location}>\n         <Route path=\"/\" exact={true}>\n           <HomePage />\n         </Route>\n         <ProtectedRoute path=\"/profile\" >\n           <ProfilePage />\n         </ProtectedRoute>\n         <Route path=\"/login\" exact={true}>\n           <LoginPage />\n         </Route>\n         <Route path=\"/register\" exact={true}>\n           <RegisterPage />\n         </Route>\n         <Route path=\"/forgot-password\" exact={true}>\n           <ForgotPasswordPage />\n         </Route>\n         <Route path=\"/reset-password\" exact={true}>\n           <ResetPasswordPage />\n         </Route>\n         <Route path=\"/ingredients/:id\" >\n           <IngredientDetails />\n         </Route>\n       </Switch>\n       {modalItem && background &&\n         <Route path=\"/ingredients/:id\" exact={true}>\n           <Modal\n             isOpen={modalItem}\n             onClose={onClose}\n           > <IngredientDetails />\n           </Modal>\n         </Route>\n       }\n     </div>\n   );\n }\n\n export default App;"]},"metadata":{},"sourceType":"module"}