{"ast":null,"code":"import{getCookie}from\"../utils\";export var socketMiddleware=function socketMiddleware(wsUrl,wsActions){return function(store){var socket=null;return function(next){return function(action){var _getCookie;var dispatch=store.dispatch;var type=action.type,withToken=action.withToken,payload=action.payload;var wsInit=wsActions.wsInit,onOpen=wsActions.onOpen,onClose=wsActions.onClose,onError=wsActions.onError,onGetOrders=wsActions.onGetOrders;var accessCookie=(_getCookie=getCookie('token'))===null||_getCookie===void 0?void 0:_getCookie.split(' ')[1];var token=withToken?accessCookie:'';if(type===wsInit){socket=new WebSocket(withToken?\"\".concat(wsUrl,\"?token=\").concat(token):\"\".concat(wsUrl).concat(payload));}if(socket){socket.send=function(event){dispatch({type:onOpen,orders:event});};socket.onerror=function(event){dispatch({type:onError,orders:event});};socket.onmessage=function(event){var data=event.data;var parsed=JSON.parse(data);dispatch({type:onGetOrders,orders:parsed});};socket.onclose=function(event){dispatch({type:onClose,orders:event});};}next(action);};};};};","map":{"version":3,"sources":["/Users/annaplokhotnyuk/Documents/react-burger/src/services/middleware/socketMiddleware.ts"],"names":["getCookie","socketMiddleware","wsUrl","wsActions","store","socket","next","action","dispatch","type","withToken","payload","wsInit","onOpen","onClose","onError","onGetOrders","accessCookie","split","token","WebSocket","send","event","orders","onerror","onmessage","data","parsed","JSON","parse","onclose"],"mappings":"AAAA,OAASA,SAAT,KAA0B,UAA1B,CAKA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAgBC,SAAhB,CAAoE,CAClG,MAAO,UAACC,KAAD,CAAkD,CACvD,GAAIC,CAAAA,MAAwB,CAAG,IAA/B,CAEA,MAAO,UAAAC,IAAI,QAAI,UAACC,MAAD,CAAY,gBACzB,GAAQC,CAAAA,QAAR,CAAqBJ,KAArB,CAAQI,QAAR,CACA,GAAQC,CAAAA,IAAR,CAAqCF,MAArC,CAAQE,IAAR,CAAcC,SAAd,CAAqCH,MAArC,CAAcG,SAAd,CAAyBC,OAAzB,CAAqCJ,MAArC,CAAyBI,OAAzB,CACA,GAAQC,CAAAA,MAAR,CAA0DT,SAA1D,CAAQS,MAAR,CAAgBC,MAAhB,CAA0DV,SAA1D,CAAgBU,MAAhB,CAAwBC,OAAxB,CAA0DX,SAA1D,CAAwBW,OAAxB,CAAiCC,OAAjC,CAA0DZ,SAA1D,CAAiCY,OAAjC,CAA0CC,WAA1C,CAA0Db,SAA1D,CAA0Ca,WAA1C,CACA,GAAMC,CAAAA,YAAY,aAAGjB,SAAS,CAAC,OAAD,CAAZ,qCAAG,WAAoBkB,KAApB,CAA0B,GAA1B,EAA+B,CAA/B,CAArB,CACA,GAAMC,CAAAA,KAAK,CAAGT,SAAS,CAAGO,YAAH,CAAkB,EAAzC,CAEA,GAAIR,IAAI,GAAKG,MAAb,CAAqB,CACnBP,MAAM,CAAG,GAAIe,CAAAA,SAAJ,CAAcV,SAAS,WAAMR,KAAN,mBAAqBiB,KAArB,YAAkCjB,KAAlC,SAA0CS,OAA1C,CAAvB,CAAT,CACD,CAED,GAAIN,MAAJ,CAAY,CACVA,MAAM,CAACgB,IAAP,CAAc,SAAAC,KAAK,CAAI,CACrBd,QAAQ,CAAC,CAAEC,IAAI,CAAEI,MAAR,CAAgBU,MAAM,CAAED,KAAxB,CAAD,CAAR,CACD,CAFD,CAGAjB,MAAM,CAACmB,OAAP,CAAiB,SAAAF,KAAK,CAAI,CACxBd,QAAQ,CAAC,CAAEC,IAAI,CAAEM,OAAR,CAAiBQ,MAAM,CAAED,KAAzB,CAAD,CAAR,CACD,CAFD,CAGAjB,MAAM,CAACoB,SAAP,CAAmB,SAAAH,KAAK,CAAI,CAC1B,GAAQI,CAAAA,IAAR,CAAiBJ,KAAjB,CAAQI,IAAR,CACA,GAAMC,CAAAA,MAAM,CAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAf,CACAlB,QAAQ,CAAC,CAAEC,IAAI,CAAEO,WAAR,CAAqBO,MAAM,CAAEI,MAA7B,CAAD,CAAR,CACD,CAJD,CAKAtB,MAAM,CAACyB,OAAP,CAAiB,SAAAR,KAAK,CAAI,CACxBd,QAAQ,CAAC,CAAEC,IAAI,CAAEK,OAAR,CAAiBS,MAAM,CAAED,KAAzB,CAAD,CAAR,CACD,CAFD,CAGD,CACDhB,IAAI,CAACC,MAAD,CAAJ,CACD,CA5BU,EAAX,CA6BD,CAhCD,CAiCD,CAlCM","sourcesContent":["import { getCookie } from \"../utils\";\nimport { wsActions as wsActionTypes } from '../actions/feed';\nimport { Middleware, MiddlewareAPI } from \"redux\";\nimport { AppDispatch, RootState } from \"../utils\";\n\nexport const socketMiddleware = (wsUrl: string, wsActions: typeof wsActionTypes): Middleware<{}> => {\n  return (store: MiddlewareAPI<AppDispatch, RootState>) => {\n    let socket: WebSocket | null = null;\n\n    return next => (action) => {\n      const { dispatch } = store;\n      const { type, withToken, payload } = action;\n      const { wsInit, onOpen, onClose, onError, onGetOrders } = wsActions;\n      const accessCookie = getCookie('token')?.split(' ')[1];\n      const token = withToken ? accessCookie : '';\n\n      if (type === wsInit) {\n        socket = new WebSocket(withToken ? `${wsUrl}?token=${token}` : `${wsUrl}${payload}`);\n      }\n\n      if (socket) {\n        socket.send = event => {\n          dispatch({ type: onOpen, orders: event });\n        };\n        socket.onerror = event => {\n          dispatch({ type: onError, orders: event });\n        };\n        socket.onmessage = event => {\n          const { data } = event;\n          const parsed = JSON.parse(data);\n          dispatch({ type: onGetOrders, orders: parsed });\n        };\n        socket.onclose = event => {\n          dispatch({ type: onClose, orders: event });\n        };\n      }\n      next(action);\n    };\n  }\n}; "]},"metadata":{},"sourceType":"module"}