{"ast":null,"code":"import { WS_CONNECTION_SUCCESS, WS_CONNECTION_CLOSED, WS_CONNECTION_ERROR, WS_GET_ORDERS, OPEN_WS_MODAL, CLOSE_WS_MODAL } from '../actions/feed';\nexport const feedInitialState = {\n  wsConnected: false,\n  orders: {},\n  wsModal: true\n};\nexport const feedReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : feedInitialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case WS_CONNECTION_SUCCESS:\n      return { ...state,\n        wsConnected: true\n      };\n\n    case WS_CONNECTION_ERROR:\n      return { ...state,\n        wsConnected: false\n      };\n\n    case WS_CONNECTION_CLOSED:\n      return { ...state,\n        wsConnected: false\n      };\n\n    case WS_GET_ORDERS:\n      return { ...state,\n        orders: action.orders\n      };\n\n    case OPEN_WS_MODAL:\n      return { ...state,\n        wsModal: true\n      };\n\n    case CLOSE_WS_MODAL:\n      return { ...state,\n        wsModal: false\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/annaplokhotnyuk/Documents/react-burger/src/services/reducers/feed.ts"],"names":["WS_CONNECTION_SUCCESS","WS_CONNECTION_CLOSED","WS_CONNECTION_ERROR","WS_GET_ORDERS","OPEN_WS_MODAL","CLOSE_WS_MODAL","feedInitialState","wsConnected","orders","wsModal","feedReducer","state","action","type"],"mappings":"AACA,SAEEA,qBAFF,EAGEC,oBAHF,EAIEC,mBAJF,EAKEC,aALF,EAMEC,aANF,EAOEC,cAPF,QAQO,iBARP;AAgBA,OAAO,MAAMC,gBAA4B,GAAG;AAC1CC,EAAAA,WAAW,EAAE,KAD6B;AAE1CC,EAAAA,MAAM,EAAE,EAFkC;AAG1CC,EAAAA,OAAO,EAAE;AAHiC,CAArC;AAMP,OAAO,MAAMC,WAAW,GAAG,YAAgE;AAAA,MAA/DC,KAA+D,uEAAvDL,gBAAuD;AAAA,MAArCM,MAAqC;;AACzF,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,qBAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELJ,QAAAA,WAAW,EAAE;AAFR,OAAP;;AAIF,SAAKL,mBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELJ,QAAAA,WAAW,EAAE;AAFR,OAAP;;AAIF,SAAKN,oBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELJ,QAAAA,WAAW,EAAE;AAFR,OAAP;;AAIF,SAAKJ,aAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELH,QAAAA,MAAM,EAAEI,MAAM,CAACJ;AAFV,OAAP;;AAIF,SAAKJ,aAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELF,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKJ,cAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELF,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF;AACE,aAAOE,KAAP;AAhCJ;AAkCD,CAnCM","sourcesContent":["import { TOrders } from '../../utils/types';\nimport {\n  TFeedActions,\n  WS_CONNECTION_SUCCESS,\n  WS_CONNECTION_CLOSED,\n  WS_CONNECTION_ERROR,\n  WS_GET_ORDERS,\n  OPEN_WS_MODAL,\n  CLOSE_WS_MODAL\n} from '../actions/feed';\n\ntype TFeedState = {\n  wsConnected: boolean;\n  orders: TOrders;\n  wsModal: boolean;\n};\n\nexport const feedInitialState: TFeedState = {\n  wsConnected: false,\n  orders: {} as TOrders,\n  wsModal: true,\n};\n\nexport const feedReducer = (state = feedInitialState, action: TFeedActions): TFeedState => {\n  switch (action.type) {\n    case WS_CONNECTION_SUCCESS:\n      return {\n        ...state,\n        wsConnected: true,\n      };\n    case WS_CONNECTION_ERROR:\n      return {\n        ...state,\n        wsConnected: false,\n      };\n    case WS_CONNECTION_CLOSED:\n      return {\n        ...state,\n        wsConnected: false,\n      };\n    case WS_GET_ORDERS:\n      return {\n        ...state,\n        orders: action.orders,\n      }\n    case OPEN_WS_MODAL:\n      return {\n        ...state,\n        wsModal: true\n      }\n    case CLOSE_WS_MODAL:\n      return {\n        ...state,\n        wsModal: false\n      }\n    default:\n      return state;\n  }\n};"]},"metadata":{},"sourceType":"module"}