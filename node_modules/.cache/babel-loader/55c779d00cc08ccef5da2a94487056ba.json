{"ast":null,"code":"import{setCookie,deleteCookie,getCookie,checkResponse}from'../utils.ts';import{baseUrl}from'../../utils/api.ts';export var REGISTER_REQUEST=\"REGISTER_REQUEST\";export var REGISTER_SUCCESS=\"REGISTER_SUCCESS\";export var REGISTER_FAILED=\"REGISTER_FAILED\";export var LOGIN_REQUEST=\"REGISTER_REQUEST\";export var LOGIN_SUCCESS=\"REGISTER_SUCCESS\";export var LOGIN_FAILED=\"REGISTER_FAILED\";export var UPDATE_TOKEN_REQUEST=\"UPDATE_TOKEN_REQUEST\";export var UPDATE_TOKEN_SUCCESS=\"UPDATE_TOKEN_SUCCESS\";export var UPDATE_TOKEN_FAILED=\"UPDATE_TOKEN_FAILED\";export var LOGOUT_REQUEST=\"LOGOUT_REQUEST\";export var LOGOUT_SUCCESS=\"LOGOUT_SUCCESS\";export var LOGOUT_FAILED=\"LOGOUT_FAILED\";export var USER_REQUEST=\"USER_REQUEST\";export var USER_SUCCESS=\"USER_SUCCESS\";export var USER_FAILED=\"USER_FAILED\";export var UPDATE_USER_REQUEST=\"UPDATE_USER_REQUEST\";export var UPDATE_USER_SUCCESS=\"UPDATE_USER_SUCCESS\";export var UPDATE_USER_FAILED=\"UPDATE_USER_FAILED\";export var FORGOT_PASSWORD_REQUEST=\"FORGOT_PASSWORD_REQUEST\";export var FORGOT_PASSWORD_SUCCESS=\"FORGOT_PASSWORD_SUCCESS\";export var FORGOT_PASSWORD_FAILED=\"FORGOT_PASSWORD_FAILED\";export var RESET_PASSWORD_REQUEST=\"RESET_PASSWORD_REQUEST\";export var RESET_PASSWORD_SUCCESS=\"RESET_PASSWORD_SUCCESS\";export var RESET_PASSWORD_FAILED=\"RESET_PASSWORD_FAILED\";export function register(email,password,name){return function(dispatch){dispatch({type:REGISTER_REQUEST});fetch(baseUrl+\"auth/register\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email:email,password:password,name:name})}).then(checkResponse).then(function(res){if(res.success){setCookie('token',res.accessToken);localStorage.setItem('refreshToken',res.refreshToken);dispatch({type:REGISTER_SUCCESS,user:res.user});}else dispatch({type:REGISTER_FAILED});}).catch(function(err){console.log(err);dispatch({type:REGISTER_FAILED});});};}export function login(email,password){return function(dispatch){dispatch({type:LOGIN_REQUEST});fetch(baseUrl+\"auth/login\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({\"email\":email,\"password\":password})}).then(checkResponse).then(function(data){if(data.success){setCookie('token',data.accessToken);localStorage.setItem('refreshToken',data.refreshToken);dispatch({type:LOGIN_SUCCESS,user:data.user});}else{dispatch({type:LOGIN_FAILED});}}).catch(function(err){console.log(err);dispatch({type:LOGIN_FAILED});});};}export function updateToken(){return function(dispatch){dispatch({type:UPDATE_TOKEN_REQUEST});fetch(baseUrl+\"auth/token\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({token:localStorage.getItem('refreshToken')})}).then(checkResponse).then(function(res){if(res.success){setCookie('token',res.accessToken);localStorage.setItem('refreshToken',res.refreshToken);dispatch({type:UPDATE_TOKEN_SUCCESS});}}).catch(function(err){console.log(err);dispatch({type:UPDATE_TOKEN_FAILED});});};}export function logout(){return function(dispatch){dispatch({type:LOGOUT_REQUEST});fetch(baseUrl+\"auth/logout\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({token:localStorage.getItem('refreshToken')})}).then(checkResponse).then(function(data){if(data.success){localStorage.removeItem('refreshToken');deleteCookie('token');dispatch({type:LOGOUT_SUCCESS});}}).catch(function(err){console.log(err);dispatch({type:LOGOUT_FAILED});});};}export function getUser(){return function(dispatch){dispatch({type:USER_REQUEST});fetch(baseUrl+\"auth/user\",{method:\"GET\",headers:{\"Content-Type\":\"application/json\",Authorization:getCookie('token')}}).then(checkResponse).then(function(data){if(data.success){dispatch({type:USER_SUCCESS,user:data.user});}}).catch(function(err){console.log(err);if(localStorage.getItem('refreshToken')){dispatch(updateToken());dispatch(getUser());}else{dispatch({type:USER_FAILED});}});};}export function updateUser(email,name){return function(dispatch){dispatch({type:UPDATE_USER_REQUEST});fetch(baseUrl+\"auth/user\",{method:\"PATCH\",headers:{\"Content-Type\":\"application/json\",Authorization:getCookie('token')},body:JSON.stringify({email:email,name:name})}).then(checkResponse).then(function(data){console.log(data);if(data.success){dispatch({type:UPDATE_USER_SUCCESS,user:data.user});}}).catch(function(err){console.log(err);if(localStorage.getItem('refreshToken')){dispatch(updateToken());dispatch(updateUser(email,name));}else{dispatch({type:UPDATE_USER_FAILED});}});};}export function forgotPassword(email){return function(dispatch){dispatch({type:FORGOT_PASSWORD_REQUEST});fetch(baseUrl+\"password-reset\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email:email})}).then(checkResponse).then(function(res){if(res.success){dispatch({type:FORGOT_PASSWORD_SUCCESS});}}).catch(function(err){console.log(err);dispatch({type:FORGOT_PASSWORD_FAILED});});};}export function resetPassword(password,token){return function(dispatch){dispatch({type:RESET_PASSWORD_REQUEST});fetch(baseUrl+\"password-reset/reset\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({password:password,token:token})}).then(checkResponse).then(function(data){if(data.success){dispatch({type:RESET_PASSWORD_SUCCESS});}}).catch(function(err){console.log(err);dispatch({type:RESET_PASSWORD_FAILED});});};}","map":{"version":3,"sources":["/Users/annaplokhotnyuk/Documents/react-burger/react-burger/src/services/actions/auth.js"],"names":["setCookie","deleteCookie","getCookie","checkResponse","baseUrl","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILED","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILED","UPDATE_TOKEN_REQUEST","UPDATE_TOKEN_SUCCESS","UPDATE_TOKEN_FAILED","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILED","USER_REQUEST","USER_SUCCESS","USER_FAILED","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_FAILED","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAILED","RESET_PASSWORD_REQUEST","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAILED","register","email","password","name","dispatch","type","fetch","method","headers","body","JSON","stringify","then","res","success","accessToken","localStorage","setItem","refreshToken","user","catch","err","console","log","login","data","updateToken","token","getItem","logout","removeItem","getUser","Authorization","updateUser","forgotPassword","resetPassword"],"mappings":"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","sourcesContent":["import {\n    setCookie,\n    deleteCookie,\n    getCookie,\n    checkResponse\n} from '../utils.ts';\nimport {\n    baseUrl\n} from '../../utils/api.ts';\n\nexport const REGISTER_REQUEST = \"REGISTER_REQUEST\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAILED = \"REGISTER_FAILED\";\nexport const LOGIN_REQUEST = \"REGISTER_REQUEST\";\nexport const LOGIN_SUCCESS = \"REGISTER_SUCCESS\";\nexport const LOGIN_FAILED = \"REGISTER_FAILED\";\nexport const UPDATE_TOKEN_REQUEST = \"UPDATE_TOKEN_REQUEST\";\nexport const UPDATE_TOKEN_SUCCESS = \"UPDATE_TOKEN_SUCCESS\";\nexport const UPDATE_TOKEN_FAILED = \"UPDATE_TOKEN_FAILED\";\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const LOGOUT_FAILED = \"LOGOUT_FAILED\";\nexport const USER_REQUEST = \"USER_REQUEST\";\nexport const USER_SUCCESS = \"USER_SUCCESS\";\nexport const USER_FAILED = \"USER_FAILED\";\nexport const UPDATE_USER_REQUEST = \"UPDATE_USER_REQUEST\";\nexport const UPDATE_USER_SUCCESS = \"UPDATE_USER_SUCCESS\";\nexport const UPDATE_USER_FAILED = \"UPDATE_USER_FAILED\";\nexport const FORGOT_PASSWORD_REQUEST = \"FORGOT_PASSWORD_REQUEST\";\nexport const FORGOT_PASSWORD_SUCCESS = \"FORGOT_PASSWORD_SUCCESS\";\nexport const FORGOT_PASSWORD_FAILED = \"FORGOT_PASSWORD_FAILED\";\nexport const RESET_PASSWORD_REQUEST = \"RESET_PASSWORD_REQUEST\";\nexport const RESET_PASSWORD_SUCCESS = \"RESET_PASSWORD_SUCCESS\";\nexport const RESET_PASSWORD_FAILED = \"RESET_PASSWORD_FAILED\";\n\nexport function register(email, password, name) {\n    return function (dispatch) {\n        dispatch({\n            type: REGISTER_REQUEST\n        });\n        fetch(baseUrl + \"auth/register\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    email,\n                    password,\n                    name\n                }),\n            })\n            .then(checkResponse)\n            .then((res) => {\n                if (res.success) {\n                    setCookie('token', res.accessToken);\n                    localStorage.setItem('refreshToken', res.refreshToken);\n                    dispatch({\n                        type: REGISTER_SUCCESS,\n                        user: res.user\n                    });\n                }\n                else dispatch({\n                    type: REGISTER_FAILED\n                })\n            })\n            .catch((err) => {\n                console.log(err);\n                dispatch({\n                    type: REGISTER_FAILED\n                })\n            });\n    }\n}\n\nexport function login(email, password) {\n    return function (dispatch) {\n        dispatch({\n            type: LOGIN_REQUEST\n        });\n        fetch(baseUrl + \"auth/login\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    \"email\": email,\n                    \"password\": password\n                }),\n            })\n            .then(checkResponse)\n            .then(data => {\n                if (data.success) {\n                    setCookie('token', data.accessToken);\n                    localStorage.setItem('refreshToken', data.refreshToken);\n                    dispatch({\n                        type: LOGIN_SUCCESS,\n                        user: data.user\n                    });\n                } else {\n                dispatch({\n                    type: LOGIN_FAILED\n                })}\n            })\n            .catch((err) => {\n                console.log(err);\n                dispatch({\n                    type: LOGIN_FAILED\n                })\n            });\n    }\n}\n\nexport function updateToken() {\n    return function (dispatch) {\n        dispatch({\n            type: UPDATE_TOKEN_REQUEST\n        });\n        fetch(baseUrl + \"auth/token\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    token: localStorage.getItem('refreshToken')\n                }),\n            })\n            .then(checkResponse)\n            .then((res) => {\n                if (res.success) {\n                    setCookie('token', res.accessToken);\n                    localStorage.setItem('refreshToken', res.refreshToken);\n                    dispatch({\n                        type: UPDATE_TOKEN_SUCCESS\n                    });\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                dispatch({\n                    type: UPDATE_TOKEN_FAILED\n                })\n            });\n    }\n}\n\nexport function logout() {\n    return function (dispatch) {\n        dispatch({\n            type: LOGOUT_REQUEST\n        });\n        fetch(baseUrl + \"auth/logout\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    token: localStorage.getItem('refreshToken')\n                }),\n            })\n            .then(checkResponse)\n            .then((data) => {\n                if (data.success) {\n                    localStorage.removeItem('refreshToken');\n                    deleteCookie('token');\n                    dispatch({\n                        type: LOGOUT_SUCCESS\n                    });\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                dispatch({\n                    type: LOGOUT_FAILED\n                })\n            });\n    }\n}\n\nexport function getUser() {\n    return function (dispatch) {\n        dispatch({\n            type: USER_REQUEST\n        });\n        fetch(baseUrl + \"auth/user\", {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: getCookie('token'),\n                },\n            })\n            .then(checkResponse)\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: USER_SUCCESS,\n                        user: data.user\n                    });\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                if (localStorage.getItem('refreshToken')) {\n                    dispatch(updateToken());\n                    dispatch(getUser());\n                } else {\n                    dispatch({\n                        type: USER_FAILED\n                    })\n                }\n            });\n    }\n}\n\nexport function updateUser(email, name) {\n    return function (dispatch) {\n        dispatch({\n            type: UPDATE_USER_REQUEST\n        });\n        fetch(baseUrl + \"auth/user\", {\n                method: \"PATCH\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: getCookie('token'),\n                },\n                body: JSON.stringify({\n                    email,\n                    name\n                }),\n            })\n            .then(checkResponse)\n            .then((data) => {\n                console.log(data)\n                if (data.success) {\n                    dispatch({\n                        type: UPDATE_USER_SUCCESS,\n                        user: data.user\n                    });\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                if (localStorage.getItem('refreshToken')) {\n                    dispatch(updateToken());\n                    dispatch(updateUser(email, name));\n                } else {\n                    dispatch({\n                        type: UPDATE_USER_FAILED\n                    })\n                }\n            });\n    }\n}\n\nexport function forgotPassword(email) {\n    return function (dispatch) {\n        dispatch({\n            type: FORGOT_PASSWORD_REQUEST\n        });\n        fetch(baseUrl + \"password-reset\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    email\n                }),\n            })\n            .then(checkResponse)\n            .then((res) => {\n                if (res.success) {\n                    dispatch({\n                        type: FORGOT_PASSWORD_SUCCESS\n                    });\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                dispatch({\n                    type: FORGOT_PASSWORD_FAILED\n                })\n            });\n    }\n}\n\nexport function resetPassword(password, token) {\n    return function (dispatch) {\n        dispatch({\n            type: RESET_PASSWORD_REQUEST\n        });\n        fetch(baseUrl + \"password-reset/reset\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    password,\n                    token\n                }),\n            })\n            .then(checkResponse)\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: RESET_PASSWORD_SUCCESS\n                    });\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                dispatch({\n                    type: RESET_PASSWORD_FAILED\n                })\n            });\n    }\n}"]},"metadata":{},"sourceType":"module"}