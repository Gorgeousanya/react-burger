{"ast":null,"code":"export function setCookie(name, value, props) {\n  props = props || {};\n  let exp = props.expires;\n\n  if (typeof exp == 'number' && exp) {\n    const d = new Date();\n    d.setTime(d.getTime() + exp * 1000);\n    exp = props.expires = d;\n  }\n\n  if (exp && exp.toUTCString) {\n    props.expires = exp.toUTCString();\n  }\n\n  value = encodeURIComponent(value);\n  let updatedCookie = name + '=' + value;\n\n  for (const propName in props) {\n    updatedCookie += '; ' + propName;\n    const propValue = props[propName];\n\n    if (propValue !== true) {\n      updatedCookie += '=' + propValue;\n    }\n  }\n\n  document.cookie = updatedCookie;\n}\nexport function getCookie(name) {\n  const matches = document.cookie.match(new RegExp('(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)') //eslint-disable-line\n  );\n  return matches ? decodeURIComponent(matches[1]) : undefined;\n}\nexport function deleteCookie(name) {\n  setCookie(name, \"\", {\n    expires: -1\n  });\n}\nexport function checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  } else {\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n}","map":{"version":3,"sources":["/Users/annaplokhotnyuk/Documents/react-burger/react-burger/src/services/utils.ts"],"names":["setCookie","name","value","props","exp","expires","d","Date","setTime","getTime","toUTCString","encodeURIComponent","updatedCookie","propName","propValue","document","cookie","getCookie","matches","match","RegExp","replace","decodeURIComponent","undefined","deleteCookie","checkResponse","res","ok","json","Promise","reject","status"],"mappings":"AAAA,OAAO,SAASA,SAAT,CAAmBC,IAAnB,EAAiCC,KAAjC,EAAgDC,KAAhD,EAA4D;AACjEA,EAAAA,KAAK,GAAGA,KAAK,IAAI,EAAjB;AACA,MAAIC,GAAG,GAAGD,KAAK,CAACE,OAAhB;;AACA,MAAI,OAAOD,GAAP,IAAc,QAAd,IAA0BA,GAA9B,EAAmC;AAC/B,UAAME,CAAC,GAAG,IAAIC,IAAJ,EAAV;AACAD,IAAAA,CAAC,CAACE,OAAF,CAAUF,CAAC,CAACG,OAAF,KAAcL,GAAG,GAAG,IAA9B;AACAA,IAAAA,GAAG,GAAGD,KAAK,CAACE,OAAN,GAAgBC,CAAtB;AACH;;AACD,MAAIF,GAAG,IAAIA,GAAG,CAACM,WAAf,EAA4B;AACxBP,IAAAA,KAAK,CAACE,OAAN,GAAgBD,GAAG,CAACM,WAAJ,EAAhB;AACH;;AACDR,EAAAA,KAAK,GAAGS,kBAAkB,CAACT,KAAD,CAA1B;AACA,MAAIU,aAAa,GAAGX,IAAI,GAAG,GAAP,GAAaC,KAAjC;;AACA,OAAK,MAAMW,QAAX,IAAuBV,KAAvB,EAA8B;AAC1BS,IAAAA,aAAa,IAAI,OAAOC,QAAxB;AACA,UAAMC,SAAS,GAAGX,KAAK,CAACU,QAAD,CAAvB;;AACA,QAAIC,SAAS,KAAK,IAAlB,EAAwB;AACpBF,MAAAA,aAAa,IAAI,MAAME,SAAvB;AACH;AACJ;;AACDC,EAAAA,QAAQ,CAACC,MAAT,GAAkBJ,aAAlB;AACD;AAED,OAAO,SAASK,SAAT,CAAmBhB,IAAnB,EAAiC;AACtC,QAAMiB,OAAO,GAAGH,QAAQ,CAACC,MAAT,CAAgBG,KAAhB,CACZ,IAAIC,MAAJ,CAAW,aAAanB,IAAI,CAACoB,OAAL,CAAa,8BAAb,EAA6C,MAA7C,CAAb,GAAoE,UAA/E,CADY,CAC+E;AAD/E,GAAhB;AAGA,SAAOH,OAAO,GAAGI,kBAAkB,CAACJ,OAAO,CAAC,CAAD,CAAR,CAArB,GAAoCK,SAAlD;AACD;AAED,OAAO,SAASC,YAAT,CAAsBvB,IAAtB,EAAoC;AACzCD,EAAAA,SAAS,CAACC,IAAD,EAAO,EAAP,EAAW;AAAEI,IAAAA,OAAO,EAAE,CAAC;AAAZ,GAAX,CAAT;AACD;AAED,OAAO,SAASoB,aAAT,CAAuBC,GAAvB,EAAsC;AAC3C,MAAIA,GAAG,CAACC,EAAR,EAAY;AACR,WAAOD,GAAG,CAACE,IAAJ,EAAP;AACH,GAFD,MAEO;AACH,WAAOC,OAAO,CAACC,MAAR,CAAgB,UAASJ,GAAG,CAACK,MAAO,EAApC,CAAP;AACH;AACF","sourcesContent":["export function setCookie(name: string, value: string, props: any) {\n  props = props || {};\n  let exp = props.expires;\n  if (typeof exp == 'number' && exp) {\n      const d = new Date();\n      d.setTime(d.getTime() + exp * 1000);\n      exp = props.expires = d;\n  }\n  if (exp && exp.toUTCString) {\n      props.expires = exp.toUTCString();\n  }\n  value = encodeURIComponent(value);\n  let updatedCookie = name + '=' + value;\n  for (const propName in props) {\n      updatedCookie += '; ' + propName;\n      const propValue = props[propName];\n      if (propValue !== true) {\n          updatedCookie += '=' + propValue;\n      }\n  }\n  document.cookie = updatedCookie;\n}\n\nexport function getCookie(name: string) {\n  const matches = document.cookie.match(\n      new RegExp('(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)') //eslint-disable-line\n  );\n  return matches ? decodeURIComponent(matches[1]) : undefined;\n}\n\nexport function deleteCookie(name: string) {\n  setCookie(name, \"\", { expires: -1 });\n}\n\nexport function checkResponse(res: Response) {\n  if (res.ok) {\n      return res.json();\n  } else {\n      return Promise.reject(`Ошибка ${res.status}`);\n  }\n}"]},"metadata":{},"sourceType":"module"}