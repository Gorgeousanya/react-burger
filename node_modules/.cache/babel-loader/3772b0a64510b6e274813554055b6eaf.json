{"ast":null,"code":"import _objectSpread from\"/Users/annaplokhotnyuk/Documents/react-burger/react-burger/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/Users/annaplokhotnyuk/Documents/react-burger/react-burger/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"children\"];import{Route,Redirect}from\"react-router-dom\";import{useSelector}from'react-redux';import{jsx as _jsx}from\"react/jsx-runtime\";var ProtectedRoute=function ProtectedRoute(_ref){var children=_ref.children,rest=_objectWithoutProperties(_ref,_excluded);var loggedIn=useSelector(function(store){return store.auth.loggedIn;});return/*#__PURE__*/_jsx(Route,_objectSpread(_objectSpread({},rest),{},{render:function render(_ref2){var location=_ref2.location;return loggedIn?children:/*#__PURE__*/_jsx(Redirect,{to:{pathname:'/login',state:{from:location}}});}}));};export default ProtectedRoute;","map":{"version":3,"sources":["/Users/annaplokhotnyuk/Documents/react-burger/react-burger/src/components/protected-routes.tsx"],"names":["Route","Redirect","useSelector","ProtectedRoute","children","rest","loggedIn","store","auth","location","pathname","state","from"],"mappings":"8UAAA,OAASA,KAAT,CAAgBC,QAAhB,KAA4C,kBAA5C,CACA,OAASC,WAAT,KAA4C,aAA5C,C,2CAGA,GAAMC,CAAAA,cAA8B,CAAG,QAAjCA,CAAAA,cAAiC,MAA2B,IAAxBC,CAAAA,QAAwB,MAAxBA,QAAwB,CAAXC,IAAW,0CAC9D,GAAMC,CAAAA,QAAQ,CAAGJ,WAAW,CAAC,SAACK,KAAD,QAA2BA,CAAAA,KAAK,CAACC,IAAN,CAAWF,QAAtC,EAAD,CAA5B,CAEA,mBACI,KAAC,KAAD,gCACQD,IADR,MAEI,MAAM,CAAE,0BAAGI,CAAAA,QAAH,OAAGA,QAAH,OACJH,CAAAA,QAAQ,CACLF,QADK,cAEL,KAAC,QAAD,EAAU,EAAE,CAAE,CAAEM,QAAQ,CAAE,QAAZ,CAAsBC,KAAK,CAAE,CAAEC,IAAI,CAAEH,QAAR,CAA7B,CAAd,EAHC,EAFZ,GADJ,CAUH,CAbD,CAeA,cAAeN,CAAAA,cAAf","sourcesContent":["import { Route, Redirect, RouteProps } from \"react-router-dom\";\nimport { useSelector, RootStateOrAny } from 'react-redux';\nimport { FC } from 'react';\n\nconst ProtectedRoute: FC<RouteProps> = ({ children, ...rest }) => {\n    const loggedIn = useSelector((store: RootStateOrAny) => store.auth.loggedIn);\n\n    return (\n        <Route\n            {...rest}\n            render={({ location }) => (\n                loggedIn\n                ? (children)\n                : (<Redirect to={{ pathname: '/login', state: { from: location } }} />)\n            )}\n        />\n    );\n}\n\nexport default ProtectedRoute;"]},"metadata":{},"sourceType":"module"}