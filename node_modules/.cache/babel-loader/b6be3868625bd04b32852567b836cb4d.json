{"ast":null,"code":"var _jsxFileName = \"/Users/annaplokhotnyuk/Documents/react-burger/react-burger/src/components/protected-routes.tsx\",\n    _s = $RefreshSig$();\n\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = _ref => {\n  _s();\n\n  let {\n    children,\n    ...rest\n  } = _ref;\n  const loggedIn = useSelector(store => store.auth.loggedIn);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: _ref2 => {\n      let {\n        location\n      } = _ref2;\n      return loggedIn ? children : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/login',\n          state: {\n            from: location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 20\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProtectedRoute, \"ryEJX7RKb9GJqEPxRveSz1MKPmo=\", false, function () {\n  return [useSelector];\n});\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/Users/annaplokhotnyuk/Documents/react-burger/react-burger/src/components/protected-routes.tsx"],"names":["Route","Redirect","useSelector","ProtectedRoute","children","rest","loggedIn","store","auth","location","pathname","state","from"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAA4C,kBAA5C;AACA,SAASC,WAAT,QAA4C,aAA5C;;;AAGA,MAAMC,cAA8B,GAAG,QAA2B;AAAA;;AAAA,MAA1B;AAAEC,IAAAA,QAAF;AAAY,OAAGC;AAAf,GAA0B;AAC9D,QAAMC,QAAQ,GAAGJ,WAAW,CAAEK,KAAD,IAA2BA,KAAK,CAACC,IAAN,CAAWF,QAAvC,CAA5B;AAEA,sBACI,QAAC,KAAD,OACQD,IADR;AAEI,IAAA,MAAM,EAAE;AAAA,UAAC;AAAEI,QAAAA;AAAF,OAAD;AAAA,aACJH,QAAQ,GACLF,QADK,gBAEL,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAEM,UAAAA,QAAQ,EAAE,QAAZ;AAAsBC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEH;AAAR;AAA7B;AAAd;AAAA;AAAA;AAAA;AAAA,cAHC;AAAA;AAFZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAbD;;GAAMN,c;UACeD,W;;;KADfC,c;AAeN,eAAeA,cAAf","sourcesContent":["import { Route, Redirect, RouteProps } from \"react-router-dom\";\nimport { useSelector, RootStateOrAny } from 'react-redux';\nimport { FC } from 'react';\n\nconst ProtectedRoute: FC<RouteProps> = ({ children, ...rest }) => {\n    const loggedIn = useSelector((store: RootStateOrAny) => store.auth.loggedIn);\n\n    return (\n        <Route\n            {...rest}\n            render={({ location }) => (\n                loggedIn\n                ? (children)\n                : (<Redirect to={{ pathname: '/login', state: { from: location } }} />)\n            )}\n        />\n    );\n}\n\nexport default ProtectedRoute;"]},"metadata":{},"sourceType":"module"}