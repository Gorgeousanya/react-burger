{"ast":null,"code":"import _objectSpread from\"/Users/annaplokhotnyuk/Documents/react-burger/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{REGISTER_REQUEST,REGISTER_SUCCESS,REGISTER_ERROR,LOGIN_REQUEST,LOGIN_SUCCESS,LOGIN_ERROR,UPDATE_TOKEN_REQUEST,UPDATE_TOKEN_SUCCESS,UPDATE_TOKEN_ERROR,LOGOUT_REQUEST,LOGOUT_SUCCESS,LOGOUT_ERROR,USER_REQUEST,USER_SUCCESS,USER_ERROR,UPDATE_USER_REQUEST,UPDATE_USER_SUCCESS,UPDATE_USER_ERROR,FORGOT_PASSWORD_REQUEST,FORGOT_PASSWORD_SUCCESS,FORGOT_PASSWORD_ERROR,RESET_PASSWORD_REQUEST,RESET_PASSWORD_SUCCESS,RESET_PASSWORD_ERROR,TAuthActions}from'../actions/auth';var authInitialState={user:{name:'',email:''},registerRequest:false,registerError:false,loggedIn:undefined,loginRequest:false,loginError:false,updateTokenRequest:false,updateTokenError:false,logoutRequest:false,logoutError:false,userRequest:false,userError:false,updateUserRequest:false,updateUserError:false,forgotPasswordRequest:false,forgotPasswordError:false,resetPasswordRequest:false,resetPasswordError:false};export var authReducer=function authReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:authInitialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case REGISTER_REQUEST:{return _objectSpread(_objectSpread({},state),{},{registerRequest:true,registerError:false});}case REGISTER_SUCCESS:{return _objectSpread(_objectSpread({},state),{},{user:action.user,registerRequest:false,loggedIn:true});}case REGISTER_ERROR:{return _objectSpread(_objectSpread({},state),{},{registerError:true,registerRequest:false});}case LOGIN_REQUEST:{return _objectSpread(_objectSpread({},state),{},{loginRequest:true,loginError:false});}case LOGIN_SUCCESS:{return _objectSpread(_objectSpread({},state),{},{user:action.user,loginRequest:false,loggedIn:true});}case LOGIN_ERROR:{return _objectSpread(_objectSpread({},state),{},{loginError:true,loginRequest:false});}case UPDATE_TOKEN_REQUEST:{return _objectSpread(_objectSpread({},state),{},{updateTokenRequest:true,updateTokenError:false});}case UPDATE_TOKEN_SUCCESS:{return _objectSpread(_objectSpread({},state),{},{loggedIn:true,updateTokenRequest:false});}case UPDATE_TOKEN_ERROR:{return _objectSpread(_objectSpread({},state),{},{updateTokenError:true,updateTokenRequest:false});}case LOGOUT_REQUEST:{return _objectSpread(_objectSpread({},state),{},{logoutRequest:true,logoutError:false});}case LOGOUT_SUCCESS:{return _objectSpread(_objectSpread({},state),{},{loggedIn:false,user:{name:'',email:''}});}case LOGOUT_ERROR:{return _objectSpread(_objectSpread({},state),{},{logoutError:true,logoutRequest:false});}case USER_REQUEST:{return _objectSpread(_objectSpread({},state),{},{userRequest:true,userError:false});}case USER_SUCCESS:{return _objectSpread(_objectSpread({},state),{},{user:action.user,loggedIn:true,userRequest:false});}case USER_ERROR:{return _objectSpread(_objectSpread({},state),{},{userError:true,userRequest:false,loggedIn:false});}case UPDATE_USER_REQUEST:{return _objectSpread(_objectSpread({},state),{},{updateUserRequest:true,updateUserError:false});}case UPDATE_USER_SUCCESS:{return _objectSpread(_objectSpread({},state),{},{user:action.user,updateUserRequest:false});}case UPDATE_USER_ERROR:{return _objectSpread(_objectSpread({},state),{},{updateUserError:true,updateUserRequest:false});}case FORGOT_PASSWORD_REQUEST:{return _objectSpread(_objectSpread({},state),{},{forgotPasswordRequest:true,forgotPasswordError:false});}case FORGOT_PASSWORD_SUCCESS:{return _objectSpread(_objectSpread({},state),{},{forgotPasswordError:false,forgotPasswordRequest:false});}case FORGOT_PASSWORD_ERROR:{return _objectSpread(_objectSpread({},state),{},{forgotPasswordError:true,forgotPasswordRequest:false});}case RESET_PASSWORD_REQUEST:{return _objectSpread(_objectSpread({},state),{},{resetPasswordRequest:true,resetPasswordError:false});}case RESET_PASSWORD_SUCCESS:{return _objectSpread(_objectSpread({},state),{},{resetPasswordError:false,resetPasswordRequest:false});}case RESET_PASSWORD_ERROR:{return _objectSpread(_objectSpread({},state),{},{resetPasswordError:true,resetPasswordRequest:false});}default:return state;}};","map":{"version":3,"sources":["/Users/annaplokhotnyuk/Documents/react-burger/src/services/reducers/auth.js"],"names":["REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_ERROR","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_ERROR","UPDATE_TOKEN_REQUEST","UPDATE_TOKEN_SUCCESS","UPDATE_TOKEN_ERROR","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_ERROR","USER_REQUEST","USER_SUCCESS","USER_ERROR","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_ERROR","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_ERROR","RESET_PASSWORD_REQUEST","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_ERROR","TAuthActions","authInitialState","user","name","email","registerRequest","registerError","loggedIn","undefined","loginRequest","loginError","updateTokenRequest","updateTokenError","logoutRequest","logoutError","userRequest","userError","updateUserRequest","updateUserError","forgotPasswordRequest","forgotPasswordError","resetPasswordRequest","resetPasswordError","authReducer","state","action","type"],"mappings":"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","sourcesContent":["import {\n    REGISTER_REQUEST,\n    REGISTER_SUCCESS,\n    REGISTER_ERROR,\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGIN_ERROR,\n    UPDATE_TOKEN_REQUEST,\n    UPDATE_TOKEN_SUCCESS,\n    UPDATE_TOKEN_ERROR,\n    LOGOUT_REQUEST,\n    LOGOUT_SUCCESS,\n    LOGOUT_ERROR,\n    USER_REQUEST,\n    USER_SUCCESS,\n    USER_ERROR,\n    UPDATE_USER_REQUEST,\n    UPDATE_USER_SUCCESS,\n    UPDATE_USER_ERROR,\n    FORGOT_PASSWORD_REQUEST,\n    FORGOT_PASSWORD_SUCCESS,\n    FORGOT_PASSWORD_ERROR,\n    RESET_PASSWORD_REQUEST,\n    RESET_PASSWORD_SUCCESS,\n    RESET_PASSWORD_ERROR,\n    TAuthActions\n } from '../actions/auth';\n\n    export type TAuthState = {\n        user: {\n            name: string,\n            email: string\n        };\n        registerRequest: boolean;\n        registerError: boolean;\n        loggedIn: any;\n        loginRequest: boolean;\n        loginError: boolean;\n        updateTokenRequest: boolean;\n        updateTokenError: boolean;\n        logoutRequest: boolean;\n        logoutError: boolean;\n        userRequest: boolean;\n        userError: boolean;\n        updateUserRequest: boolean;\n        updateUserError: boolean;\n        forgotPasswordRequest: boolean;\n        forgotPasswordError: boolean;\n        resetPasswordRequest: boolean;\n        resetPasswordError: boolean;\n    };\n\n    const authInitialState = { \n        user: {\n            name: '',\n            email: ''\n        },\n        registerRequest: false,\n        registerError: false,\n        loggedIn: undefined,\n        loginRequest: false,\n        loginError: false,\n        updateTokenRequest: false,\n        updateTokenError: false,\n        logoutRequest: false,\n        logoutError: false,\n        userRequest: false,\n        userError: false,\n        updateUserRequest: false,\n        updateUserError: false,\n        forgotPasswordRequest: false,\n        forgotPasswordError: false,\n        resetPasswordRequest: false,\n        resetPasswordError: false,\n    };\n\n    export const authReducer = (state = authInitialState, action: TAuthActions):TAuthState => {\n        switch (action.type) {\n            case REGISTER_REQUEST: {\n                return {\n                    ...state,\n                    registerRequest: true,\n                    registerError: false,\n                };\n            }\n                case REGISTER_SUCCESS: {\n                    return {\n                        ...state,\n                        user: action.user,\n                        registerRequest: false,\n                        loggedIn: true\n                    };\n                }\n                case REGISTER_ERROR: {\n                    return {\n                        ...state,\n                        registerError: true,\n                        registerRequest: false,\n                    };\n                }\n                case LOGIN_REQUEST: {\n                    return {\n                        ...state,\n                        loginRequest: true,\n                        loginError: false,\n                    };\n                }\n                case LOGIN_SUCCESS: {\n                    return {\n                        ...state,\n                        user: action.user,\n                        loginRequest: false,\n                        loggedIn: true\n                    };\n                }\n                case LOGIN_ERROR: {\n                    return {\n                        ...state,\n                        loginError: true,\n                        loginRequest: false,\n                    };\n                }\n                case UPDATE_TOKEN_REQUEST: {\n                    return {\n                        ...state,\n                        updateTokenRequest: true,\n                        updateTokenError: false,\n                    };\n                }\n                case UPDATE_TOKEN_SUCCESS: {\n                    return {\n                        ...state,\n                        loggedIn: true,\n                        updateTokenRequest: false,\n                    };\n                }\n                case UPDATE_TOKEN_ERROR: {\n                    return {\n                        ...state,\n                        updateTokenError: true,\n                        updateTokenRequest: false,\n                    };\n                }\n                case LOGOUT_REQUEST: {\n                    return {\n                        ...state,\n                        logoutRequest: true,\n                        logoutError: false,\n                    };\n                }\n                case LOGOUT_SUCCESS: {\n                    return {\n                        ...state,\n                        loggedIn: false,\n                        user: {\n                            name: '',\n                            email: ''\n                        },\n                    };\n                }\n                case LOGOUT_ERROR: {\n                    return {\n                        ...state,\n                        logoutError: true,\n                        logoutRequest: false,\n                    };\n                }\n                case USER_REQUEST: {\n                    return {\n                        ...state,\n                        userRequest: true,\n                        userError: false,\n                    };\n                }\n                case USER_SUCCESS: {\n                    return {\n                        ...state,\n                        user: action.user,\n                        loggedIn: true,\n                        userRequest: false,\n                    };\n                }\n                case USER_ERROR: {\n                    return {\n                        ...state,\n                        userError: true,\n                        userRequest: false,\n                        loggedIn: false\n                    };\n                }\n                case UPDATE_USER_REQUEST: {\n                    return {\n                        ...state,\n                        updateUserRequest: true,\n                        updateUserError: false,\n                    };\n                }\n                case UPDATE_USER_SUCCESS: {\n                    return {\n                        ...state,\n                        user: action.user,\n                        updateUserRequest: false,\n                    };\n                }\n                case UPDATE_USER_ERROR: {\n                    return {\n                        ...state,\n                        updateUserError: true,\n                        updateUserRequest: false,\n                    };\n                }\n                case FORGOT_PASSWORD_REQUEST: {\n                    return {\n                        ...state,\n                        forgotPasswordRequest: true,\n                        forgotPasswordError: false,\n                    };\n                }\n                case FORGOT_PASSWORD_SUCCESS: {\n                    return {\n                        ...state,\n                        forgotPasswordError: false,\n                        forgotPasswordRequest: false,\n                    };\n                }\n                case FORGOT_PASSWORD_ERROR: {\n                    return {\n                        ...state,\n                        forgotPasswordError: true,\n                        forgotPasswordRequest: false,\n                    };\n                }\n                case RESET_PASSWORD_REQUEST: {\n                    return {\n                        ...state,\n                        resetPasswordRequest: true,\n                        resetPasswordError: false,\n                    };\n                }\n                case RESET_PASSWORD_SUCCESS: {\n                    return {\n                        ...state,\n                        resetPasswordError: false,\n                        resetPasswordRequest: false,\n                    };\n                }\n                case RESET_PASSWORD_ERROR: {\n                    return {\n                        ...state,\n                        resetPasswordError: true,\n                        resetPasswordRequest: false,\n                    };\n                }                                \n            default:\n                return state;\n        }\n    }"]},"metadata":{},"sourceType":"module"}