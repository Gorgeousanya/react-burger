{"ast":null,"code":"import { CHANGE_SORT, SET_TAB, ADD_INGREDIENT, DELETE_INGREDIENT, GET_INGREDIENTS_REQUEST, GET_INGREDIENTS_SUCCESS, GET_INGREDIENTS_ERROR, GET_ORDER_REQUEST, GET_ORDER_SUCCESS, GET_ORDER_ERROR, RESET_ORDER, OPEN_MODAL, OPEN_MODAL_ORDER, CLOSE_MODAL, CLOSE_MODAL_ORDER } from '../actions/burger';\nexport const burgerInitialState = {\n  tab: \"one\",\n  ingredients: [],\n  ingredientsLoading: false,\n  ingredientsError: false,\n  constructor: [],\n  modal: false,\n  modalOrder: false,\n  order: {},\n  orderLoading: false,\n  orderError: false\n};\nexport const burgerReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : burgerInitialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_INGREDIENTS_REQUEST:\n      return { ...state,\n        ingredientsLoading: true,\n        ingredientsError: false\n      };\n\n    case GET_INGREDIENTS_SUCCESS:\n      return { ...state,\n        ingredientsLoading: false,\n        ingredientsError: false,\n        ingredients: action.data\n      };\n\n    case GET_INGREDIENTS_ERROR:\n      return { ...state,\n        ingredientsError: true,\n        ingredientsLoading: false\n      };\n\n    case GET_ORDER_REQUEST:\n      return { ...state,\n        orderLoading: true,\n        orderError: false,\n        order: {}\n      };\n\n    case GET_ORDER_SUCCESS:\n      return { ...state,\n        orderLoading: false,\n        orderError: false,\n        order: action.data\n      };\n\n    case GET_ORDER_ERROR:\n      return { ...state,\n        orderLoading: false,\n        orderError: true\n      };\n\n    case ADD_INGREDIENT:\n      return { ...state,\n        constructor: state.constructor ? action.item.type === \"bun\" ? [...state.constructor, action.item, action.item] : [...state.constructor, action.item] : action.item.type === \"bun\" ? [action.item, action.item] : [action.item]\n      };\n\n    case DELETE_INGREDIENT:\n      return { ...state,\n        constructor: [...state.constructor].filter(item => item.uuid !== action.id)\n      };\n\n    case OPEN_MODAL:\n      return { ...state,\n        modal: true\n      };\n\n    case OPEN_MODAL_ORDER:\n      return { ...state,\n        modalOrder: true\n      };\n\n    case CLOSE_MODAL:\n      return { ...state,\n        modal: false\n      };\n\n    case CLOSE_MODAL_ORDER:\n      return { ...state,\n        modalOrder: false\n      };\n\n    case SET_TAB:\n      return { ...state,\n        tab: action.tab\n      };\n\n    case RESET_ORDER:\n      return { ...state,\n        order: {},\n        constructor: []\n      };\n\n    case CHANGE_SORT:\n      const items = state.constructor.filter(item => item.type !== \"bun\");\n      const bun = state.constructor.filter(ingredient => ingredient.type === 'bun');\n      const other = [...items];\n      const drag = other.splice(action.drag, 1)[0];\n      other.splice(action.hover, 0, drag);\n      return { ...state,\n        constructor: [...bun, ...other]\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/annaplokhotnyuk/Documents/react-burger/src/services/reducers/burger.ts"],"names":["CHANGE_SORT","SET_TAB","ADD_INGREDIENT","DELETE_INGREDIENT","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_ERROR","GET_ORDER_REQUEST","GET_ORDER_SUCCESS","GET_ORDER_ERROR","RESET_ORDER","OPEN_MODAL","OPEN_MODAL_ORDER","CLOSE_MODAL","CLOSE_MODAL_ORDER","burgerInitialState","tab","ingredients","ingredientsLoading","ingredientsError","constructor","modal","modalOrder","order","orderLoading","orderError","burgerReducer","state","action","type","data","item","filter","uuid","id","items","bun","ingredient","other","drag","splice","hover"],"mappings":"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","sourcesContent":["import { TBurgerActions, CHANGE_SORT, SET_TAB, ADD_INGREDIENT, DELETE_INGREDIENT, GET_INGREDIENTS_REQUEST, GET_INGREDIENTS_SUCCESS, GET_INGREDIENTS_ERROR, GET_ORDER_REQUEST, GET_ORDER_SUCCESS, GET_ORDER_ERROR, RESET_ORDER, OPEN_MODAL, OPEN_MODAL_ORDER, CLOSE_MODAL, CLOSE_MODAL_ORDER,\n} from '../actions/burger';\nimport { TIngredient, IOrderState } from '../../utils/types';\n\ntype TBurgerState = {\n    tab: string,\n    ingredients: Array<TIngredient>,\n    ingredientsLoading: boolean,\n    ingredientsError: boolean,\n    constructor: Array<TIngredient>,\n    modal: boolean,\n    modalOrder: boolean,\n    order: IOrderState,\n    orderLoading: boolean,\n    orderError: boolean,\n  };\n\nexport const burgerInitialState: TBurgerState = { \n    tab: \"one\",\n    ingredients: [],\n    ingredientsLoading: false,\n    ingredientsError: false,\n    constructor: [],\n    modal: false,\n    modalOrder: false,\n    order: {} as IOrderState,\n    orderLoading: false,\n    orderError: false,\n};\n\nexport const burgerReducer = (state = burgerInitialState, action: TBurgerActions): TBurgerState => {\n    switch (action.type) {\n        case GET_INGREDIENTS_REQUEST:\n            return {\n                ...state,\n                ingredientsLoading: true,\n                ingredientsError: false\n            }   \n        case GET_INGREDIENTS_SUCCESS:\n            return {\n                ...state,\n                ingredientsLoading: false,\n                ingredientsError: false,\n                ingredients: action.data\n            }                       \n        case GET_INGREDIENTS_ERROR:\n            return {\n                ...state,\n                ingredientsError: true,\n                ingredientsLoading: false,\n            } \n        case GET_ORDER_REQUEST:\n            return {\n                ...state,\n                orderLoading: true,\n                orderError: false,\n                order: {} as IOrderState\n            }\n        case GET_ORDER_SUCCESS:\n            return {\n                ...state,\n                orderLoading: false,\n                orderError: false,\n                order: action.data \n            }\n        case GET_ORDER_ERROR:\n            return {\n                ...state,\n                orderLoading: false,\n                orderError: true\n            }           \n        case ADD_INGREDIENT:\n            return {\n                ...state,\n                constructor:\n                    state.constructor \n                    ? action.item.type === \"bun\" ? [...state.constructor, action.item, action.item] : [...state.constructor, action.item]\n                    : action.item.type === \"bun\" ? [action.item, action.item]: [action.item]\n            };\n        case DELETE_INGREDIENT:\n            return {\n                ...state,\n                constructor: \n                    [...state.constructor].filter((item: TIngredient) => item.uuid!==action.id)\n            }\n        case OPEN_MODAL:\n            return {\n                ...state,\n                modal: true\n            }\n        case OPEN_MODAL_ORDER:\n            return {\n                ...state,\n                modalOrder: true\n            }            \n        case CLOSE_MODAL:\n            return {\n                ...state,\n                modal: false\n            }   \n        case CLOSE_MODAL_ORDER:\n            return {\n                ...state,\n                modalOrder: false\n            }                                 \n        case SET_TAB:\n            return {\n                ...state,\n                tab: action.tab\n            }  \n        case RESET_ORDER:\n            return {\n                ...state,\n                order: {} as IOrderState,\n                constructor: [],\n            }            \n        case CHANGE_SORT:\n            const items = state.constructor.filter((item: TIngredient) => item.type!==\"bun\");\n            const bun = state.constructor.filter((ingredient: TIngredient) => ingredient.type === 'bun');\n            const other=[...items];\n            const drag = other.splice(action.drag, 1)[0];\n            other.splice(action.hover, 0, drag)\n            return {\n                ...state,\n                constructor: [...bun, ...other]\n            }                          \n        default:\n            return state;\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}