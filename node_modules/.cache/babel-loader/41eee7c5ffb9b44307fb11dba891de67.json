{"ast":null,"code":"import { REGISTER_REQUEST, REGISTER_SUCCESS, REGISTER_FAILED, LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILED, UPDATE_TOKEN_REQUEST, UPDATE_TOKEN_SUCCESS, UPDATE_TOKEN_FAILED, LOGOUT_REQUEST, LOGOUT_SUCCESS, LOGOUT_FAILED, USER_REQUEST, USER_SUCCESS, USER_FAILED, UPDATE_USER_REQUEST, UPDATE_USER_SUCCESS, UPDATE_USER_FAILED, FORGOT_PASSWORD_REQUEST, FORGOT_PASSWORD_SUCCESS, FORGOT_PASSWORD_FAILED, RESET_PASSWORD_REQUEST, RESET_PASSWORD_SUCCESS, RESET_PASSWORD_FAILED } from '../actions/auth';\nconst authInitialState = {\n  user: null,\n  registerRequest: false,\n  registerFailed: false,\n  loggedIn: false,\n  loginRequest: false,\n  loginFailed: false,\n  updateTokenRequest: false,\n  updateTokenFailed: false,\n  logoutRequest: false,\n  logoutFailed: false,\n  userRequest: false,\n  userFailed: false,\n  updateUserRequest: false,\n  updateUserFailed: false,\n  forgotPasswordRequest: false,\n  forgotPasswordFailed: false,\n  resetPasswordRequest: false,\n  resetPasswordFailed: false\n};\nexport const authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : authInitialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case REGISTER_REQUEST:\n      {\n        return { ...state,\n          registerRequest: true,\n          registerFailed: false\n        };\n      }\n\n    case REGISTER_SUCCESS:\n      {\n        return { ...state,\n          user: action.user,\n          registerRequest: false,\n          loggedIn: true\n        };\n      }\n\n    case REGISTER_FAILED:\n      {\n        return { ...state,\n          registerFailed: true,\n          registerRequest: false\n        };\n      }\n\n    case LOGIN_REQUEST:\n      {\n        return { ...state,\n          loginRequest: true,\n          loginFailed: false\n        };\n      }\n\n    case LOGIN_SUCCESS:\n      {\n        return { ...state,\n          user: action.user,\n          loginRequest: false,\n          loggedIn: true\n        };\n      }\n\n    case LOGIN_FAILED:\n      {\n        return { ...state,\n          loginFailed: true,\n          loginRequest: false\n        };\n      }\n\n    case UPDATE_TOKEN_REQUEST:\n      {\n        return { ...state,\n          updateTokenRequest: true,\n          updateTokenFailed: false\n        };\n      }\n\n    case UPDATE_TOKEN_SUCCESS:\n      {\n        return { ...state,\n          loggedIn: true,\n          updateTokenRequest: false\n        };\n      }\n\n    case UPDATE_TOKEN_FAILED:\n      {\n        return { ...state,\n          updateTokenFailed: true,\n          updateTokenRequest: false\n        };\n      }\n\n    case LOGOUT_REQUEST:\n      {\n        return { ...state,\n          logoutRequest: true,\n          logoutFailed: false\n        };\n      }\n\n    case LOGOUT_SUCCESS:\n      {\n        return { ...state,\n          loggedIn: false,\n          user: null\n        };\n      }\n\n    case LOGOUT_FAILED:\n      {\n        return { ...state,\n          logoutFailed: true,\n          logoutRequest: false\n        };\n      }\n\n    case USER_REQUEST:\n      {\n        return { ...state,\n          userRequest: true,\n          userFailed: false\n        };\n      }\n\n    case USER_SUCCESS:\n      {\n        return { ...state,\n          user: action.user,\n          loggedIn: true,\n          userRequest: false\n        };\n      }\n\n    case USER_FAILED:\n      {\n        return { ...state,\n          userFailed: true,\n          userRequest: false\n        };\n      }\n\n    case UPDATE_USER_REQUEST:\n      {\n        return { ...state,\n          updateUserRequest: true,\n          updateUserFailed: false\n        };\n      }\n\n    case UPDATE_USER_SUCCESS:\n      {\n        return { ...state,\n          user: action.user,\n          updateUserRequest: false\n        };\n      }\n\n    case UPDATE_USER_FAILED:\n      {\n        return { ...state,\n          updateUserFailed: true,\n          updateUserRequest: false\n        };\n      }\n\n    case FORGOT_PASSWORD_REQUEST:\n      {\n        return { ...state,\n          forgotPasswordRequest: true,\n          forgotPasswordFailed: false\n        };\n      }\n\n    case FORGOT_PASSWORD_SUCCESS:\n      {\n        return { ...state,\n          user: action.user,\n          forgotPasswordRequest: false\n        };\n      }\n\n    case FORGOT_PASSWORD_FAILED:\n      {\n        return { ...state,\n          forgotPasswordFailed: true,\n          forgotPasswordRequest: false\n        };\n      }\n\n    case RESET_PASSWORD_REQUEST:\n      {\n        return { ...state,\n          resetPasswordRequest: true,\n          resetPasswordFailed: false\n        };\n      }\n\n    case RESET_PASSWORD_SUCCESS:\n      {\n        return { ...state,\n          user: action.user,\n          resetPasswordRequest: false\n        };\n      }\n\n    case RESET_PASSWORD_FAILED:\n      {\n        return { ...state,\n          resetPasswordFailed: true,\n          resetPasswordRequest: false\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/annaplokhotnyuk/Documents/react-burger/react-burger/src/services/reducers/auth.js"],"names":["REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILED","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILED","UPDATE_TOKEN_REQUEST","UPDATE_TOKEN_SUCCESS","UPDATE_TOKEN_FAILED","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILED","USER_REQUEST","USER_SUCCESS","USER_FAILED","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_FAILED","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAILED","RESET_PASSWORD_REQUEST","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAILED","authInitialState","user","registerRequest","registerFailed","loggedIn","loginRequest","loginFailed","updateTokenRequest","updateTokenFailed","logoutRequest","logoutFailed","userRequest","userFailed","updateUserRequest","updateUserFailed","forgotPasswordRequest","forgotPasswordFailed","resetPasswordRequest","resetPasswordFailed","authReducer","state","action","type"],"mappings":"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","sourcesContent":["import {\n    REGISTER_REQUEST,\n    REGISTER_SUCCESS,\n    REGISTER_FAILED,\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGIN_FAILED,\n    UPDATE_TOKEN_REQUEST,\n    UPDATE_TOKEN_SUCCESS,\n    UPDATE_TOKEN_FAILED,\n    LOGOUT_REQUEST,\n    LOGOUT_SUCCESS,\n    LOGOUT_FAILED,\n    USER_REQUEST,\n    USER_SUCCESS,\n    USER_FAILED,\n    UPDATE_USER_REQUEST,\n    UPDATE_USER_SUCCESS,\n    UPDATE_USER_FAILED,\n    FORGOT_PASSWORD_REQUEST,\n    FORGOT_PASSWORD_SUCCESS,\n    FORGOT_PASSWORD_FAILED,\n    RESET_PASSWORD_REQUEST,\n    RESET_PASSWORD_SUCCESS,\n    RESET_PASSWORD_FAILED } from '../actions/auth';\n\n    const authInitialState = { \n        user: null,\n        registerRequest: false,\n        registerFailed: false,\n        loggedIn: false,\n        loginRequest: false,\n        loginFailed: false,\n        updateTokenRequest: false,\n        updateTokenFailed: false,\n        logoutRequest: false,\n        logoutFailed: false,\n        userRequest: false,\n        userFailed: false,\n        updateUserRequest: false,\n        updateUserFailed: false,\n        forgotPasswordRequest: false,\n        forgotPasswordFailed: false,\n        resetPasswordRequest: false,\n        resetPasswordFailed: false,\n    };\n\n    export const authReducer = (state = authInitialState, action) => {\n        switch (action.type) {\n            case REGISTER_REQUEST: {\n                return {\n                    ...state,\n                    registerRequest: true,\n                    registerFailed: false,\n                };\n            }\n                case REGISTER_SUCCESS: {\n                    return {\n                        ...state,\n                        user: action.user,\n                        registerRequest: false,\n                        loggedIn: true\n                    };\n                }\n                case REGISTER_FAILED: {\n                    return {\n                        ...state,\n                        registerFailed: true,\n                        registerRequest: false,\n                    };\n                }\n                case LOGIN_REQUEST: {\n                    return {\n                        ...state,\n                        loginRequest: true,\n                        loginFailed: false,\n                    };\n                }\n                case LOGIN_SUCCESS: {\n                    return {\n                        ...state,\n                        user: action.user,\n                        loginRequest: false,\n                        loggedIn: true\n                    };\n                }\n                case LOGIN_FAILED: {\n                    return {\n                        ...state,\n                        loginFailed: true,\n                        loginRequest: false,\n                    };\n                }\n                case UPDATE_TOKEN_REQUEST: {\n                    return {\n                        ...state,\n                        updateTokenRequest: true,\n                        updateTokenFailed: false,\n                    };\n                }\n                case UPDATE_TOKEN_SUCCESS: {\n                    return {\n                        ...state,\n                        loggedIn: true,\n                        updateTokenRequest: false,\n                    };\n                }\n                case UPDATE_TOKEN_FAILED: {\n                    return {\n                        ...state,\n                        updateTokenFailed: true,\n                        updateTokenRequest: false,\n                    };\n                }\n                case LOGOUT_REQUEST: {\n                    return {\n                        ...state,\n                        logoutRequest: true,\n                        logoutFailed: false,\n                    };\n                }\n                case LOGOUT_SUCCESS: {\n                    return {\n                        ...state,\n                        loggedIn: false,\n                        user: null,\n                    };\n                }\n                case LOGOUT_FAILED: {\n                    return {\n                        ...state,\n                        logoutFailed: true,\n                        logoutRequest: false,\n                    };\n                }\n                case USER_REQUEST: {\n                    return {\n                        ...state,\n                        userRequest: true,\n                        userFailed: false,\n                    };\n                }\n                case USER_SUCCESS: {\n                    return {\n                        ...state,\n                        user: action.user,\n                        loggedIn: true,\n                        userRequest: false,\n                    };\n                }\n                case USER_FAILED: {\n                    return {\n                        ...state,\n                        userFailed: true,\n                        userRequest: false,\n                    };\n                }\n                case UPDATE_USER_REQUEST: {\n                    return {\n                        ...state,\n                        updateUserRequest: true,\n                        updateUserFailed: false,\n                    };\n                }\n                case UPDATE_USER_SUCCESS: {\n                    return {\n                        ...state,\n                        user: action.user,\n                        updateUserRequest: false,\n                    };\n                }\n                case UPDATE_USER_FAILED: {\n                    return {\n                        ...state,\n                        updateUserFailed: true,\n                        updateUserRequest: false,\n                    };\n                }\n                case FORGOT_PASSWORD_REQUEST: {\n                    return {\n                        ...state,\n                        forgotPasswordRequest: true,\n                        forgotPasswordFailed: false,\n                    };\n                }\n                case FORGOT_PASSWORD_SUCCESS: {\n                    return {\n                        ...state,\n                        user: action.user,\n                        forgotPasswordRequest: false,\n                    };\n                }\n                case FORGOT_PASSWORD_FAILED: {\n                    return {\n                        ...state,\n                        forgotPasswordFailed: true,\n                        forgotPasswordRequest: false,\n                    };\n                }\n                case RESET_PASSWORD_REQUEST: {\n                    return {\n                        ...state,\n                        resetPasswordRequest: true,\n                        resetPasswordFailed: false,\n                    };\n                }\n                case RESET_PASSWORD_SUCCESS: {\n                    return {\n                        ...state,\n                        user: action.user,\n                        resetPasswordRequest: false,\n                    };\n                }\n                case RESET_PASSWORD_FAILED: {\n                    return {\n                        ...state,\n                        resetPasswordFailed: true,\n                        resetPasswordRequest: false,\n                    };\n                }                                \n            default:\n                return state;\n        }\n    }"]},"metadata":{},"sourceType":"module"}