{"ast":null,"code":"var _jsxFileName = \"/Users/annaplokhotnyuk/Documents/react-burger/src/pages/reset-password.tsx\",\n    _s = $RefreshSig$();\n\nimport styles from './pages.module.css';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from '../services/hooks';\nimport { Input, PasswordInput, Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { resetPassword } from '../services/actions/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResetPasswordPage() {\n  _s();\n\n  const auth = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const prevPathname = history.location.state;\n  const [form, setForm] = useState({\n    password: \"\",\n    token: \"\"\n  });\n\n  const onChange = e => {\n    setForm({ ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onLogin = () => {\n    history.replace({\n      pathname: '/login'\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    dispatch(resetPassword(form.password, form.token));\n\n    if (!(auth !== null && auth !== void 0 && auth.resetPasswordError)) {\n      history.push('/login');\n    } else {\n      alert(\"Не удалось восстановить пароль:(\");\n    }\n  };\n\n  if (!prevPathname) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: '/login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (auth !== null && auth !== void 0 && auth.loggedIn) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.App,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inputs,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.input,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text text_type_main-medium\",\n          children: \"\\u0412\\u043E\\u0441\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: /*#__PURE__*/_jsxDEV(PasswordInput, {\n            onChange: onChange,\n            value: form.password,\n            name: 'password'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043A\\u043E\\u0434 \\u0438\\u0437 \\u043F\\u0438\\u0441\\u044C\\u043C\\u0430\",\n            onChange: onChange,\n            value: form.token,\n            name: \"token\",\n            error: false,\n            errorText: 'Ошибка',\n            size: 'default'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          size: \"medium\",\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.save,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text text_type_main-default text_color_inactive\",\n        children: \"\\u0412\\u0441\\u043F\\u043E\\u043C\\u043D\\u0438\\u043B\\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"secondary\",\n        size: \"medium\",\n        onClick: onLogin,\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ResetPasswordPage, \"6f8U29v73/GeRbq10f53tYz1M2Y=\", false, function () {\n  return [useSelector, useDispatch, useHistory];\n});\n\n_c = ResetPasswordPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPasswordPage\");","map":{"version":3,"sources":["/Users/annaplokhotnyuk/Documents/react-burger/src/pages/reset-password.tsx"],"names":["styles","Redirect","useHistory","React","useState","useDispatch","useSelector","Input","PasswordInput","Button","resetPassword","ResetPasswordPage","auth","state","dispatch","history","prevPathname","location","form","setForm","password","token","onChange","e","target","name","value","onLogin","replace","pathname","onSubmit","preventDefault","resetPasswordError","push","alert","loggedIn","App","inputs","input","save"],"mappings":"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","sourcesContent":["import styles from './pages.module.css';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from '../services/hooks';\nimport { Input, PasswordInput, Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { resetPassword } from '../services/actions/auth';\n\nexport default function ResetPasswordPage() {\n  const auth = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const prevPathname = history.location.state;\n  const [form, setForm] = useState({ password: \"\", token: \"\" });\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n\n  const onLogin = () => {\n    history.replace({ pathname: '/login' });\n  };\n\n  const onSubmit = (e: React.SyntheticEvent<Element, Event>) => {\n    e.preventDefault();\n    dispatch(resetPassword(form.password, form.token));\n    if (!auth?.resetPasswordError) {\n      history.push('/login');\n    }\n    else {\n      alert(\"Не удалось восстановить пароль:(\")\n    }\n  };\n\n  if (!prevPathname) {\n    return (\n      <Redirect to={'/login'} />\n    );\n  }\n\n  if (auth?.loggedIn) {\n    return (\n      <Redirect to={\"/\"} />\n    );\n  }\n\n  return (\n    <div className={styles.App}>\n      <div className={styles.inputs}>\n        <div className={styles.input}>\n          <p className=\"text text_type_main-medium\">\n            Восстановление пароля\n          </p>\n        </div>\n        <form onSubmit={onSubmit}>\n        <div className={styles.input}>\n          <PasswordInput onChange={onChange} value={form.password} name={'password'} />\n        </div>\n        <div className={styles.input}>\n          <Input\n            type='text'\n            placeholder='Введите код из письма'\n            onChange={onChange}\n            value={form.token}\n            name='token'\n            error={false}\n            errorText={'Ошибка'}\n            size={'default'}\n          />\n        </div>\n        <Button type=\"primary\" size=\"medium\">\n          Сохранить\n        </Button>\n        </form>\n      </div>\n      <div className={styles.save}>\n        <p className=\"text text_type_main-default text_color_inactive\">\n          Вспомнили пароль?\n        </p>\n        <Button type=\"secondary\" size=\"medium\" onClick={onLogin}>\n          Войти\n        </Button>\n      </div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}