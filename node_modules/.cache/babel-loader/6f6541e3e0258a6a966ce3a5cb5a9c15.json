{"ast":null,"code":"import { CHANGE_SORT, SET_TAB, ADD_INGREDIENT, DELETE_INGREDIENT, GET_INGREDIENTS_REQUEST, GET_INGREDIENTS_SUCCESS, GET_INGREDIENTS_ERROR, GET_ORDER_REQUEST, GET_ORDER_SUCCESS, GET_ORDER_ERROR, CLEAR_ORDER, SET_ORDER, OPEN_MODAL, OPEN_MODAL_ORDER, CLOSE_MODAL, CLOSE_MODAL_ORDER } from '../actions/burger';\nconst burgerInitialState = {\n  tab: \"one\",\n  ingredients: [],\n  ingredientsLoading: false,\n  ingredientsError: null,\n  constructor: [],\n  modal: false,\n  modalOrder: false,\n  order: {},\n  orderLoading: false,\n  orderError: null\n};\nexport const burgerReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : burgerInitialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_INGREDIENTS_REQUEST:\n      return { ...state,\n        ingredientsLoading: true,\n        ingredientsError: null\n      };\n\n    case GET_INGREDIENTS_SUCCESS:\n      return { ...state,\n        ingredientsLoading: false,\n        ingredientsError: null,\n        ingredients: action.data\n      };\n\n    case GET_INGREDIENTS_ERROR:\n      return { ...state,\n        ingredientsLoading: false,\n        ingredientsError: action.error\n      };\n\n    case GET_ORDER_REQUEST:\n      return { ...state,\n        orderLoading: true,\n        orderError: null,\n        order: {}\n      };\n\n    case GET_ORDER_SUCCESS:\n      return { ...state,\n        orderLoading: false,\n        orderError: null,\n        order: action.data\n      };\n\n    case GET_ORDER_ERROR:\n      return { ...state,\n        orderLoading: false,\n        orderError: action.error\n      };\n\n    case ADD_INGREDIENT:\n      return { ...state,\n        constructor: state.constructor ? action.item.type === \"bun\" ? [...state.constructor, action.item, action.item] : [...state.constructor, action.item] : action.item.type === \"bun\" ? [action.item, action.item] : [action.item]\n      };\n\n    case DELETE_INGREDIENT:\n      return { ...state,\n        constructor: [...state.constructor].filter(item => item.uuid !== action.id)\n      };\n\n    case OPEN_MODAL:\n      return { ...state,\n        modal: true\n      };\n\n    case OPEN_MODAL_ORDER:\n      return { ...state,\n        modalOrder: true\n      };\n\n    case CLOSE_MODAL:\n      return { ...state,\n        modal: false\n      };\n\n    case CLOSE_MODAL_ORDER:\n      return { ...state,\n        modalOrder: false\n      };\n\n    case SET_TAB:\n      return { ...state,\n        tab: action.tab\n      };\n\n    case SET_ORDER:\n      return { ...state,\n        order: action.data\n      };\n\n    case CLEAR_ORDER:\n      return { ...state,\n        order: {},\n        constructor: []\n      };\n\n    case CHANGE_SORT:\n      const items = state.constructor.filter(item => item.type !== \"bun\");\n      const bun = state.constructor.filter(ingredient => ingredient.type === 'bun');\n      const other = [...items];\n      const drag = other.splice(action.drag, 1)[0];\n      other.splice(action.hover, 0, drag);\n      return { ...state,\n        constructor: [...bun, ...other]\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/annaplokhotnyuk/Documents/react-burger/react-burger/src/services/reducers/burger.js"],"names":["CHANGE_SORT","SET_TAB","ADD_INGREDIENT","DELETE_INGREDIENT","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_ERROR","GET_ORDER_REQUEST","GET_ORDER_SUCCESS","GET_ORDER_ERROR","CLEAR_ORDER","SET_ORDER","OPEN_MODAL","OPEN_MODAL_ORDER","CLOSE_MODAL","CLOSE_MODAL_ORDER","burgerInitialState","tab","ingredients","ingredientsLoading","ingredientsError","constructor","modal","modalOrder","order","orderLoading","orderError","burgerReducer","state","action","type","data","error","item","filter","uuid","id","items","bun","ingredient","other","drag","splice","hover"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,cAA/B,EAA+CC,iBAA/C,EAAkEC,uBAAlE,EAA2FC,uBAA3F,EAAoHC,qBAApH,EAA2IC,iBAA3I,EAA8JC,iBAA9J,EAAiLC,eAAjL,EAAkMC,WAAlM,EAA+MC,SAA/M,EAA0NC,UAA1N,EAAsOC,gBAAtO,EAAwPC,WAAxP,EAAqQC,iBAArQ,QACO,mBADP;AAGA,MAAMC,kBAAkB,GAAG;AACvBC,EAAAA,GAAG,EAAE,KADkB;AAEvBC,EAAAA,WAAW,EAAE,EAFU;AAGvBC,EAAAA,kBAAkB,EAAE,KAHG;AAIvBC,EAAAA,gBAAgB,EAAE,IAJK;AAKvBC,EAAAA,WAAW,EAAE,EALU;AAMvBC,EAAAA,KAAK,EAAE,KANgB;AAOvBC,EAAAA,UAAU,EAAE,KAPW;AAQvBC,EAAAA,KAAK,EAAE,EARgB;AASvBC,EAAAA,YAAY,EAAE,KATS;AAUvBC,EAAAA,UAAU,EAAE;AAVW,CAA3B;AAaA,OAAO,MAAMC,aAAa,GAAG,YAAwC;AAAA,MAAvCC,KAAuC,uEAA/BZ,kBAA+B;AAAA,MAAXa,MAAW;;AACjE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK1B,uBAAL;AACI,aAAO,EACH,GAAGwB,KADA;AAEHT,QAAAA,kBAAkB,EAAE,IAFjB;AAGHC,QAAAA,gBAAgB,EAAE;AAHf,OAAP;;AAKJ,SAAKf,uBAAL;AACI,aAAO,EACH,GAAGuB,KADA;AAEHT,QAAAA,kBAAkB,EAAE,KAFjB;AAGHC,QAAAA,gBAAgB,EAAE,IAHf;AAIHF,QAAAA,WAAW,EAAEW,MAAM,CAACE;AAJjB,OAAP;;AAMJ,SAAKzB,qBAAL;AACI,aAAO,EACH,GAAGsB,KADA;AAEHT,QAAAA,kBAAkB,EAAE,KAFjB;AAGHC,QAAAA,gBAAgB,EAAES,MAAM,CAACG;AAHtB,OAAP;;AAKJ,SAAKzB,iBAAL;AACI,aAAO,EACH,GAAGqB,KADA;AAEHH,QAAAA,YAAY,EAAE,IAFX;AAGHC,QAAAA,UAAU,EAAE,IAHT;AAIHF,QAAAA,KAAK,EAAE;AAJJ,OAAP;;AAMJ,SAAKhB,iBAAL;AACI,aAAO,EACH,GAAGoB,KADA;AAEHH,QAAAA,YAAY,EAAE,KAFX;AAGHC,QAAAA,UAAU,EAAE,IAHT;AAIHF,QAAAA,KAAK,EAAEK,MAAM,CAACE;AAJX,OAAP;;AAMJ,SAAKtB,eAAL;AACI,aAAO,EACH,GAAGmB,KADA;AAEHH,QAAAA,YAAY,EAAE,KAFX;AAGHC,QAAAA,UAAU,EAAEG,MAAM,CAACG;AAHhB,OAAP;;AAKJ,SAAK9B,cAAL;AACI,aAAO,EACH,GAAG0B,KADA;AAEHP,QAAAA,WAAW,EACPO,KAAK,CAACP,WAAN,GACEQ,MAAM,CAACI,IAAP,CAAYH,IAAZ,KAAqB,KAArB,GAA6B,CAAC,GAAGF,KAAK,CAACP,WAAV,EAAuBQ,MAAM,CAACI,IAA9B,EAAoCJ,MAAM,CAACI,IAA3C,CAA7B,GAAgF,CAAC,GAAGL,KAAK,CAACP,WAAV,EAAuBQ,MAAM,CAACI,IAA9B,CADlF,GAEEJ,MAAM,CAACI,IAAP,CAAYH,IAAZ,KAAqB,KAArB,GAA6B,CAACD,MAAM,CAACI,IAAR,EAAcJ,MAAM,CAACI,IAArB,CAA7B,GAAyD,CAACJ,MAAM,CAACI,IAAR;AAL5D,OAAP;;AAOJ,SAAK9B,iBAAL;AACI,aAAO,EACH,GAAGyB,KADA;AAEHP,QAAAA,WAAW,EACP,CAAC,GAAGO,KAAK,CAACP,WAAV,EAAuBa,MAAvB,CAA+BD,IAAD,IAAUA,IAAI,CAACE,IAAL,KAAYN,MAAM,CAACO,EAA3D;AAHD,OAAP;;AAKJ,SAAKxB,UAAL;AACI,aAAO,EACH,GAAGgB,KADA;AAEHN,QAAAA,KAAK,EAAE;AAFJ,OAAP;;AAIJ,SAAKT,gBAAL;AACI,aAAO,EACH,GAAGe,KADA;AAEHL,QAAAA,UAAU,EAAE;AAFT,OAAP;;AAIJ,SAAKT,WAAL;AACI,aAAO,EACH,GAAGc,KADA;AAEHN,QAAAA,KAAK,EAAE;AAFJ,OAAP;;AAIJ,SAAKP,iBAAL;AACI,aAAO,EACH,GAAGa,KADA;AAEHL,QAAAA,UAAU,EAAE;AAFT,OAAP;;AAIJ,SAAKtB,OAAL;AACI,aAAO,EACH,GAAG2B,KADA;AAEHX,QAAAA,GAAG,EAAEY,MAAM,CAACZ;AAFT,OAAP;;AAIJ,SAAKN,SAAL;AACI,aAAO,EACH,GAAGiB,KADA;AAEHJ,QAAAA,KAAK,EAAEK,MAAM,CAACE;AAFX,OAAP;;AAIJ,SAAKrB,WAAL;AACI,aAAO,EACH,GAAGkB,KADA;AAEHJ,QAAAA,KAAK,EAAE,EAFJ;AAGHH,QAAAA,WAAW,EAAE;AAHV,OAAP;;AAKJ,SAAKrB,WAAL;AACI,YAAMqC,KAAK,GAAGT,KAAK,CAACP,WAAN,CAAkBa,MAAlB,CAAyBD,IAAI,IAAIA,IAAI,CAACH,IAAL,KAAY,KAA7C,CAAd;AACA,YAAMQ,GAAG,GAAGV,KAAK,CAACP,WAAN,CAAkBa,MAAlB,CAAyBK,UAAU,IAAIA,UAAU,CAACT,IAAX,KAAoB,KAA3D,CAAZ;AACA,YAAMU,KAAK,GAAC,CAAC,GAAGH,KAAJ,CAAZ;AACA,YAAMI,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAab,MAAM,CAACY,IAApB,EAA0B,CAA1B,EAA6B,CAA7B,CAAb;AACAD,MAAAA,KAAK,CAACE,MAAN,CAAab,MAAM,CAACc,KAApB,EAA2B,CAA3B,EAA8BF,IAA9B;AACA,aAAO,EACH,GAAGb,KADA;AAEHP,QAAAA,WAAW,EAAE,CAAC,GAAGiB,GAAJ,EAAS,GAAGE,KAAZ;AAFV,OAAP;;AAIJ;AACI,aAAOZ,KAAP;AArGR;AAuGH,CAxGM","sourcesContent":["import { CHANGE_SORT, SET_TAB, ADD_INGREDIENT, DELETE_INGREDIENT, GET_INGREDIENTS_REQUEST, GET_INGREDIENTS_SUCCESS, GET_INGREDIENTS_ERROR, GET_ORDER_REQUEST, GET_ORDER_SUCCESS, GET_ORDER_ERROR, CLEAR_ORDER, SET_ORDER, OPEN_MODAL, OPEN_MODAL_ORDER, CLOSE_MODAL, CLOSE_MODAL_ORDER,\n} from '../actions/burger';\n\nconst burgerInitialState = { \n    tab: \"one\",\n    ingredients: [],\n    ingredientsLoading: false,\n    ingredientsError: null,\n    constructor: [],\n    modal: false,\n    modalOrder: false,\n    order: {},\n    orderLoading: false,\n    orderError: null,\n};\n\nexport const burgerReducer = (state = burgerInitialState, action) => {\n    switch (action.type) {\n        case GET_INGREDIENTS_REQUEST:\n            return {\n                ...state,\n                ingredientsLoading: true,\n                ingredientsError: null\n            }   \n        case GET_INGREDIENTS_SUCCESS:\n            return {\n                ...state,\n                ingredientsLoading: false,\n                ingredientsError: null,\n                ingredients: action.data\n            }                       \n        case GET_INGREDIENTS_ERROR:\n            return {\n                ...state,\n                ingredientsLoading: false,\n                ingredientsError: action.error\n            } \n        case GET_ORDER_REQUEST:\n            return {\n                ...state,\n                orderLoading: true,\n                orderError: null,\n                order: {}\n            }\n        case GET_ORDER_SUCCESS:\n            return {\n                ...state,\n                orderLoading: false,\n                orderError: null,\n                order: action.data\n            }\n        case GET_ORDER_ERROR:\n            return {\n                ...state,\n                orderLoading: false,\n                orderError: action.error\n            }           \n        case ADD_INGREDIENT:\n            return {\n                ...state,\n                constructor:\n                    state.constructor \n                    ? action.item.type === \"bun\" ? [...state.constructor, action.item, action.item] : [...state.constructor, action.item]\n                    : action.item.type === \"bun\" ? [action.item, action.item]: [action.item]\n            };\n        case DELETE_INGREDIENT:\n            return {\n                ...state,\n                constructor: \n                    [...state.constructor].filter((item) => item.uuid!==action.id)\n            }\n        case OPEN_MODAL:\n            return {\n                ...state,\n                modal: true\n            }\n        case OPEN_MODAL_ORDER:\n            return {\n                ...state,\n                modalOrder: true\n            }            \n        case CLOSE_MODAL:\n            return {\n                ...state,\n                modal: false\n            }   \n        case CLOSE_MODAL_ORDER:\n            return {\n                ...state,\n                modalOrder: false\n            }                                 \n        case SET_TAB:\n            return {\n                ...state,\n                tab: action.tab\n            }           \n        case SET_ORDER:\n            return {\n                ...state,\n                order: action.data\n            }\n        case CLEAR_ORDER:\n            return {\n                ...state,\n                order: {},\n                constructor: [],\n            }            \n        case CHANGE_SORT:\n            const items = state.constructor.filter(item => item.type!==\"bun\");\n            const bun = state.constructor.filter(ingredient => ingredient.type === 'bun');\n            const other=[...items];\n            const drag = other.splice(action.drag, 1)[0];\n            other.splice(action.hover, 0, drag)\n            return {\n                ...state,\n                constructor: [...bun, ...other]\n            }                          \n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}